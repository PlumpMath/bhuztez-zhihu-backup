{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=0",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=20",
        "is_start": true,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146294001",
            "thumbnail": "",
            "created_time": 1487049623,
            "updated_time": 1487050582,
            "id": 146294001,
            "excerpt": "这也要hash？按看见的顺序编个号不就完了，或者直接用地址也不是啥问题吧 get(L: handle, R: handle) -> handle 这个题只需要保证handle可以比较，相同的L R 一定得到相同的结果就可以了。",
            "content": "这也要hash？按看见的顺序编个号不就完了，或者直接用地址也不是啥问题吧<br><br>get(L: handle, R: handle) -&gt; handle<br><br>这个题只需要保证handle可以比较，相同的L R 一定得到相同的结果就可以了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "二叉树怎么判断同构？",
                "updated_time": 1486376596,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55484468",
                "created": 1486376526,
                "id": 55484468
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146273968",
            "thumbnail": "",
            "created_time": 1487042511,
            "updated_time": 1487042512,
            "id": 146273968,
            "excerpt": "红帽不就是干这个的？",
            "content": "红帽不就是干这个的？",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "可以将下载的开源软件修改后拿到市场上进行销售盈利吗？",
                "updated_time": 1487034038,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55786776",
                "created": 1487034038,
                "id": 55786776
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146268162",
            "thumbnail": "",
            "created_time": 1487040686,
            "updated_time": 1487040687,
            "id": 146268162,
            "excerpt": "我比他们声音还大，你邀请我来回答这个问题？",
            "content": "我比他们声音还大，你邀请我来回答这个问题？",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么 50~70 年生人的这帮父辈平时说话声音总是特别大？",
                "updated_time": 1487281852,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55731048",
                "created": 1486900013,
                "id": 55731048
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146202516",
            "thumbnail": "",
            "created_time": 1486996583,
            "updated_time": 1486996749,
            "id": 146202516,
            "excerpt": "我认为，不是方块字都是垃圾，英文字母不能适应竖排，在宽屏时代即将惨遭淘汰。",
            "content": "我认为，不是方块字都是垃圾，英文字母不能适应竖排，在宽屏时代即将惨遭淘汰。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价姜峯楠（Ted Chiang）在纽约客上的随笔《坏汉字》？",
                "updated_time": 1487430369,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/47205991",
                "created": 1465304761,
                "id": 47205991
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146198585",
            "thumbnail": "",
            "created_time": 1486995376,
            "updated_time": 1486995377,
            "id": 146198585,
            "excerpt": "并没有解决。个人感觉罗素搞的那个类型论只不过是用类型套类型强行拖延，你只套有限层确实是不会产生啥问题了，很多情况下这个表达能力是足够了的。可要是套了无限层，真的还没问题么？",
            "content": "并没有解决。个人感觉罗素搞的那个类型论只不过是用类型套类型强行拖延，你只套有限层确实是不会产生啥问题了，很多情况下这个表达能力是足够了的。可要是套了无限层，真的还没问题么？",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "据说罗素悖论有解，如何解？",
                "updated_time": 1349329210,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/20511488",
                "created": 1349328997,
                "id": 20511488
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146169177",
            "thumbnail": "",
            "created_time": 1486985094,
            "updated_time": 1486985094,
            "id": 146169177,
            "excerpt": "讲数数毫无问题啊。 数数就不是抽象了？ 会从1数到100之后，接着就应该用形式语言来写出数数的规则。而不是强行集合论。 讲抽象你至少要举两个例子。你要讲集合论，必须至少再举一个例子才行。 罗素说过集合论是悖论的基础，类型论才是逻辑的基础 所以更应该学习类型论",
            "content": "讲数数毫无问题啊。<br><br>数数就不是抽象了？<br><br>会从1数到100之后，接着就应该用形式语言来写出数数的规则。而不是强行集合论。<br><br>讲抽象你至少要举两个例子。你要讲集合论，必须至少再举一个例子才行。<br><br>罗素说过集合论是悖论的基础，类型论才是逻辑的基础<br><br>所以更应该学习类型论",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么学习数学，不按照逻辑顺序从集合论和抽象代数开始，而是先学10以内的自然数，然后学10以内的加法?",
                "updated_time": 1473075484,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/50336054",
                "created": 1472987825,
                "id": 50336054
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146144230",
            "thumbnail": "",
            "created_time": 1486976569,
            "updated_time": 1486977165,
            "id": 146144230,
            "excerpt": "虽然能坦言自己也搞不明白凭什么自己可以获得这些，而别人却获得不了，但还是散发着强烈的成功人士的气息。要是他没能获得这些东西，估计是要高喊王侯将相宁有种乎了。 高考本身就是问题。为什么要有高考？为什么考不上大学这些东西就不给学了？如果问题如此严重，为什么不让大学变得不再重要，而是非要让所有人都能考上大学呢？社会的进步并没有让人人都当上皇帝，而是从此就没人想当皇帝了，就算想也知道会被笑话死，不敢说出…",
            "content": "虽然能坦言自己也搞不明白凭什么自己可以获得这些，而别人却获得不了，但还是散发着强烈的成功人士的气息。要是他没能获得这些东西，估计是要高喊王侯将相宁有种乎了。<br><br>高考本身就是问题。为什么要有高考？为什么考不上大学这些东西就不给学了？如果问题如此严重，为什么不让大学变得不再重要，而是非要让所有人都能考上大学呢？社会的进步并没有让人人都当上皇帝，而是从此就没人想当皇帝了，就算想也知道会被笑话死，不敢说出来。<br><br>最荒诞的现实就是，有很多东西，明明小时候就能学好了的，学习的成本还不见得比现在教的这点可怜的东西高，学校里非得不教，说是只有大学才学这个的，现在学这个是不务正业，高考也不考。然而，命题人却特别喜欢用考纲范围外的知识可以很容易解决的问题，变成考纲范围内完全不讲道理的凑数 ...<br><br>即便情况如此糟糕，在知乎上依旧有很多人在那里大肆鼓吹国内的教育。<br><br>我来给你们讲个笑话。比如知乎上有很多人疯狂的鼓吹什么计算机科班出身对计算机理论掌握的更好。某____大学学生却抱怨说在大学里根本就学不到什么理论，编译原理课糊弄一个凑合能跑的编译器就过去了，连Magic Set和Chomsky Normal Form之间有什么联系都不讲的，这也算理论？真正好笑的地方在于，某7岁小朋友学了一点这个知识后，说不想再玩这么幼稚的东西了，你在玩什么就带他一起玩，水平烂无所谓，这种一看就是哄小孩的玩的特别没劲。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价文章《一个北大既得利益者的自述》？",
                "updated_time": 1487603180,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55720641",
                "created": 1486879519,
                "id": 55720641
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146080669",
            "thumbnail": "",
            "created_time": 1486956876,
            "updated_time": 1486957080,
            "id": 146080669,
            "excerpt": "杨博又不是曾博 ... 曾博才喜欢这么钓鱼，明明讲的都是对的，非要故意搞个破绽出来，引你上钩。钓鱼技术不断进步，有目共睹。从小勃勃时期，单问题钓鱼，被叛逆者无视。到勃失败时期，发展出多问题钓鱼的新套路，叛逆者终于上钩了。 杨博这里是稀里糊涂的把3当成了变量来用，不符合大众的直觉。不过这好像和曾博也没啥区别了，当曾博说三本的时候，表达的也是O(n)的意思。 (逃",
            "content": "杨博又不是曾博 ...<br><br>曾博才喜欢这么钓鱼，明明讲的都是对的，非要故意搞个破绽出来，引你上钩。钓鱼技术不断进步，有目共睹。从小勃勃时期，单问题钓鱼，被叛逆者无视。到勃失败时期，发展出多问题钓鱼的新套路，叛逆者终于上钩了。<br><br>杨博这里是稀里糊涂的把3当成了变量来用，不符合大众的直觉。不过这好像和曾博也没啥区别了，当曾博说三本的时候，表达的也是O(n)的意思。<br><br>(逃",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何理解杨博老师对 DOM 操作复杂度的评论？",
                "updated_time": 1486175456,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55389009",
                "created": 1486175456,
                "id": 55389009
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146075432",
            "thumbnail": "",
            "created_time": 1486955262,
            "updated_time": 1486955262,
            "id": 146075432,
            "excerpt": "buzzword何苦为难buzzword",
            "content": "buzzword何苦为难buzzword",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何理解Object-Oriented Meets Functional？",
                "updated_time": 1486695461,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55639632",
                "created": 1486695461,
                "id": 55639632
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146006523",
            "thumbnail": "",
            "created_time": 1486910864,
            "updated_time": 1486912738,
            "id": 146006523,
            "excerpt": "C++的move根本就是骗人的，毕竟是右值引用，而不是右值，是待在原地不动的，都还要调用destructor的，怎么能说是move？讲道理，Rust那才是真的move。 move并不能减少复制，C++引入move仅仅是为了能表达独占。没有move语义，只有copy语义，会导致很多没必要使用引用计数的地方被迫使用引用计数，或者某种变相的引用计数。没有move(和using)，在C++里，连allocator都不可能搞对。 我想起来，侯捷有一本著名的深入浅出MFC。第一章标…",
            "content": "C++的move根本就是骗人的，毕竟是右值引用，而不是右值，是待在原地不动的，都还要调用destructor的，怎么能说是move？讲道理，Rust那才是真的move。<br><br>move并不能减少复制，C++引入move仅仅是为了能表达独占。没有move语义，只有copy语义，会导致很多没必要使用引用计数的地方被迫使用引用计数，或者某种变相的引用计数。没有move(和using)，在C++里，连allocator都不可能搞对。<br><br>我想起来，侯捷有一本著名的深入浅出MFC。第一章标题好像是勿在浮沙筑高台？然而C++和MFC，哪个不是在流沙上建起来摩天大楼？",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "C++ 中的「移动」在内存或者寄存器中的操作是什么，为什么就比拷贝赋值性能高呢？",
                "updated_time": 1486991201,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55735384",
                "created": 1486907057,
                "id": 55735384
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/146005692",
            "thumbnail": "",
            "created_time": 1486910634,
            "updated_time": 1486912794,
            "id": 146005692,
            "excerpt": "J语言啊，比JS还少一S。",
            "content": "J语言啊，比JS还少一S。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "对于只会JavaScript的前端程序员，学习哪一门其它语言能够最大程度的扩展自己的技术视野？",
                "updated_time": 1486810443,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55693126",
                "created": 1486805971,
                "id": 55693126
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/145896989",
            "thumbnail": "",
            "created_time": 1486869059,
            "updated_time": 1486869060,
            "id": 145896989,
            "excerpt": "这样的写法本身就是有问题的 首先什么是 free variable x = 1\n\ndef f():\n return x\n 这里 x 在 f 里就是free variable了。也就是说，当你说free variable的时候，通常情况，你已经默认是有scope的。 这也就是问题所在了， \\forall x 里的 x 只在后面那个expression里有效，你对于整个命题写 where x is not free in \\phi，这个 x 并不能指向 \\forall x 里的 x 。毕竟你在scope外面并不能看到scope里面的变量 这就是为什么metamat…",
            "content": "这样的写法本身就是有问题的<br><br>首先什么是 free variable<br><br><div class=\"highlight\"><pre><code class=\"language-text\">x = 1\n\ndef f():\n    return x\n</code></pre></div><br>这里 x 在 f 里就是free variable了。也就是说，当你说free variable的时候，通常情况，你已经默认是有scope的。<br><br>这也就是问题所在了， \\forall x 里的 x 只在后面那个expression里有效，你对于整个命题写 where x is not free in \\phi，这个 x 并不能指向 \\forall x 里的 x 。毕竟你在scope外面并不能看到scope里面的变量<br><br>这就是为什么metamath大法好了。metamath没有scope，也不搞什么free variable，于是就不会有这个问题了，这样才是最好的。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "下图中，第4,5条逻辑公理什么意思？",
                "updated_time": 1486820773,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55700829",
                "created": 1486820773,
                "id": 55700829
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/145594036",
            "thumbnail": "",
            "created_time": 1486715014,
            "updated_time": 1486715426,
            "id": 145594036,
            "excerpt": "先弄个简易的proof checker，看到哪里，就顺便把证明过程检查一下。Principia Mathematica随便怎么读都可以啊。毕竟证明过程中每一步用到了其他地方的结论都把编号写出来了，不知道是怎么来的就翻到那里去看就是了。 讲道理，现在流行的教科书到处都是易证，不难得出，留给读者作为习题，甚至有些书上列出来的证明根本经不起proof checker的检验，你都看的下去。Principia Mathematica你还要问怎么读？",
            "content": "先弄个简易的proof checker，看到哪里，就顺便把证明过程检查一下。Principia Mathematica随便怎么读都可以啊。毕竟证明过程中每一步用到了其他地方的结论都把编号写出来了，不知道是怎么来的就翻到那里去看就是了。<br><br>讲道理，现在流行的教科书到处都是易证，不难得出，留给读者作为习题，甚至有些书上列出来的证明根本经不起proof checker的检验，你都看的下去。Principia Mathematica你还要问怎么读？",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何阅读Principia Mathematica?",
                "updated_time": 1486637906,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55616885",
                "created": 1486637592,
                "id": 55616885
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/145459461",
            "thumbnail": "",
            "created_time": 1486651220,
            "updated_time": 1486651221,
            "id": 145459461,
            "excerpt": "你这么纠结不如用ctypes调用C函数吧 https://docs.python.org/2/library/ctypes.html ",
            "content": "你这么纠结不如用ctypes调用C函数吧<br><br><a href=\"https://link.zhihu.com/?target=https%3A//docs.python.org/2/library/ctypes.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">docs.python.org/2/libra</span><span class=\"invisible\">ry/ctypes.html</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Python有类似于C语言的格式化输入scanf吗？",
                "updated_time": 1486641875,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/49840816",
                "created": 1471739095,
                "id": 49840816
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/145131094",
            "thumbnail": "",
            "created_time": 1486525362,
            "updated_time": 1486525829,
            "id": 145131094,
            "excerpt": "我认为，汉字就没必要规定读音，不管你怎么读，只要写的是这个字就可以了。我们要坚持文言分离原则。",
            "content": "我认为，汉字就没必要规定读音，不管你怎么读，只要写的是这个字就可以了。我们要坚持文言分离原则。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价中国诗词大会女选手把“将进酒”读成jiang进酒？",
                "updated_time": 1486126610,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55371271",
                "created": 1486124396,
                "id": 55371271
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/145033672",
            "thumbnail": "",
            "created_time": 1486473887,
            "updated_time": 1486478023,
            "id": 145033672,
            "excerpt": "变量名尽量少用就可以了。重点是完全不要用括号，而不是完全不用变量名。毕竟，有了括号还怎么朗读，naive。你不看看滥用括号的pointfree长什么样子 (.) . (.) 即便如此，你这个getRemainPages就写的很别扭，此处应该写一个向上取整的函数 比如J语言里大概写成 >. (total % ipp) pagination 就好了 这个离完全不用括号还有点距离。要想完全不用括号，应该在parsing过程中进行type inference进行消歧义",
            "content": "变量名尽量少用就可以了。重点是完全不要用括号，而不是完全不用变量名。毕竟，有了括号还怎么朗读，naive。你不看看滥用括号的pointfree长什么样子 (.) . (.)<br><br>即便如此，你这个getRemainPages就写的很别扭，此处应该写一个向上取整的函数<br><br>比如J语言里大概写成 &gt;. (total % ipp) pagination 就好了<br><br>这个离完全不用括号还有点距离。要想完全不用括号，应该在parsing过程中进行type inference进行消歧义",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "是不是 JavaScript 函数式编程的 Pointfree Style 有时会丧失程序可读性？",
                "updated_time": 1486524635,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55490625",
                "created": 1486386871,
                "id": 55490625
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/144918631",
            "thumbnail": "",
            "created_time": 1486436821,
            "updated_time": 1486439447,
            "id": 144918631,
            "excerpt": "网站并不能随意fork啊，你这么搞不就又变成一个曾博呼风唤雨的地方了 我现在的想法是，在真正能用的F2F adhoc overlay搞出来之前。我们先搞一个简陋的工具，用来讨论F2F该怎么搞。就弄一个基于BT的邮件同步工具好了。 每封邮件的message-id，强制设置为SHA-256(邮件内容)，有一个HAMT那样的hash table，记录message-id -> in-reply-to 。从tracker里获取peer信息后，peer之间同步这个hash table，发现新邮件，并从peer里获取邮件…",
            "content": "网站并不能随意fork啊，你这么搞不就又变成一个曾博呼风唤雨的地方了<br><br>我现在的想法是，在真正能用的F2F adhoc overlay搞出来之前。我们先搞一个简陋的工具，用来讨论F2F该怎么搞。就弄一个基于BT的邮件同步工具好了。<br><br>每封邮件的message-id，强制设置为SHA-256(邮件内容)，有一个HAMT那样的hash table，记录message-id -&gt; in-reply-to 。从tracker里获取peer信息后，peer之间同步这个hash table，发现新邮件，并从peer里获取邮件内容。<br><br>一开始我们就搞一个IMAP/SMTP gateway用来让标准邮件客户端来读取里面的内容，发新邮件。而peer之间同步就用标准的TLS加密，省得被运营商篡改。一开始只有TCP和HTTP(s) tracker，后面再慢慢抄utp/mainline DHT什么的<br><br>因为是TLS加密，所以得搞个X.509的CA，只有拿到了证书才能连进来，用CRL来禁言，避免恶意人士进来捣乱。不服可以自己开一个，反正只要开一个tracker就好了，这个很容易维护的。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如果广大勃学家/勃丝山寨一个quora，那么这个网站会叫什么名字呢？",
                "updated_time": 1486468582,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55502849",
                "created": 1486426522,
                "id": 55502849
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/144712121",
            "thumbnail": "",
            "created_time": 1486350903,
            "updated_time": 1486353144,
            "id": 144712121,
            "excerpt": "当然是不利的。有了这些东西，代码就没法朗读了。没法朗读还怎么谈笑风生。 根本原因是因为他们不懂得用函数把函数组合成函数。最近在开发的程序语言，就没有任何括号以及其他各种标点符号，连换行缩进也不需要。大概长这样 今有数甲又有整数乙又有整数丙问甲如乙而丙得几何曰甲以乙除之以丙乘之\n 不知道比现在这些垃圾语言高到哪里去了",
            "content": "当然是不利的。有了这些东西，代码就没法朗读了。没法朗读还怎么谈笑风生。<br><br>根本原因是因为他们不懂得用函数把函数组合成函数。最近在开发的程序语言，就没有任何括号以及其他各种标点符号，连换行缩进也不需要。大概长这样<br><br><div class=\"highlight\"><pre><code class=\"language-text\">今有数甲又有整数乙又有整数丙问甲如乙而丙得几何曰甲以乙除之以丙乘之\n</code></pre></div><br>不知道比现在这些垃圾语言高到哪里去了",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "很多编程语言都要用到花括号，分号等来分割代码，是不是有利？",
                "updated_time": 1486210361,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55410429",
                "created": 1486210361,
                "id": 55410429
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/144645954",
            "thumbnail": "",
            "created_time": 1486308013,
            "updated_time": 1486308014,
            "id": 144645954,
            "excerpt": "因为无法成功，出于无奈而选择自杀的才不是什么失败人士，是臭不要脸的伪失败人士",
            "content": "因为无法成功，出于无奈而选择自杀的才不是什么失败人士，是臭不要脸的伪失败人士",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "失败人士的基因也能延续是一件好事吗？",
                "updated_time": 1486360257,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/55422697",
                "created": 1486231875,
                "id": 55422697
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/144590942",
            "thumbnail": "",
            "created_time": 1486289361,
            "updated_time": 1486289383,
            "id": 144590942,
            "excerpt": "从来就没有什么PLT的说法，是王垠以一己之力发明了PLT",
            "content": "从来就没有什么PLT的说法，是王垠以一己之力发明了PLT",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "[PLT]和[数理逻辑、类型论、抽象代数及范畴论]的关系是什么？",
                "updated_time": 1483625517,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/37050853",
                "created": 1446273861,
                "id": 37050853
            }
        }
    ]
}