{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=120",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=160",
        "is_start": false,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/128587193",
            "thumbnail": "",
            "created_time": 1477537586,
            "updated_time": 1477537586,
            "id": 128587193,
            "excerpt": "他一定是学习了阮一峰的经验",
            "content": "他一定是学习了阮一峰的经验",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "王垠为什么宁可去微软也不回国？",
                "updated_time": 1477510647,
                "url": "https://www.zhihu.com/api/v4/questions/52015737",
                "type": "question",
                "created": 1477510130,
                "question_type": "normal",
                "id": 52015737
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/128519856",
            "thumbnail": "",
            "created_time": 1477489057,
            "updated_time": 1477493024,
            "id": 128519856,
            "excerpt": "不知道为啥邀请我。他说的已有的机器学习工具指的是什么？ 当然了，首先看他支持不支持LiFT，支持的话，果断好评啊。(逃",
            "content": "不知道为啥邀请我。他说的已有的机器学习工具指的是什么？<br><br>当然了，首先看他支持不支持LiFT，支持的话，果断好评啊。(逃",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何看待王垠对 tensorflow 的评价？",
                "updated_time": 1477485710,
                "url": "https://www.zhihu.com/api/v4/questions/52005964",
                "type": "question",
                "created": 1477484563,
                "question_type": "normal",
                "id": 52005964
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/127623509",
            "thumbnail": "",
            "created_time": 1477015429,
            "updated_time": 1477015429,
            "id": 127623509,
            "excerpt": "cargo test的问题是，他是按tests下面的文件一个个单独编译测试的。而common里的函数，不一定会被所有测试文件用到，于是就会产生这个dead_code了。 在测试文件里，写pub mod common而不是mod common，这些warning就会消失。这么做和加什么 #[allow(dead_code)] 一样是不对的。假如common里真的有某个函数没被任何测试文件用到，我们就看不出来了。",
            "content": "cargo test的问题是，他是按tests下面的文件一个个单独编译测试的。而common里的函数，不一定会被所有测试文件用到，于是就会产生这个dead_code了。<br><br>在测试文件里，写pub mod common而不是mod common，这些warning就会消失。这么做和加什么 #[allow(dead_code)] 一样是不对的。假如common里真的有某个函数没被任何测试文件用到，我们就看不出来了。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Rust tests目录下XXX is never used怎么解决？",
                "updated_time": 1476976045,
                "url": "https://www.zhihu.com/api/v4/questions/51812210",
                "type": "question",
                "created": 1476975952,
                "question_type": "normal",
                "id": 51812210
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/127576840",
            "thumbnail": "",
            "created_time": 1476975415,
            "updated_time": 1476976340,
            "id": 127576840,
            "excerpt": "这锅难道某强势审校不背？ 不过这方面确实缺少好用的工具啊。真不知道那么多书他们都是怎么写出来的。21天学通Erlang 最最开始的时候，花了大量时间搞了几个简陋的脚本，以便在生成PDF时，可以检查书中所有的代码，输出是不是和书中声称的是一样的，不同的代码文件里，同一个代码片段的内容是不是都是一样的。 当时真的是很无语，一个现成能用的工具都找不到。难道大家都是和某强势审校一样只靠目测的么？",
            "content": "这锅难道某<b>强势</b>审校不背？<br><br>不过这方面确实缺少好用的工具啊。真不知道那么多书他们都是怎么写出来的。21天学通Erlang 最最开始的时候，花了大量时间搞了几个简陋的脚本，以便在生成PDF时，可以检查书中所有的代码，输出是不是和书中声称的是一样的，不同的代码文件里，同一个代码片段的内容是不是都是一样的。<br><br>当时真的是很无语，一个现成能用的工具都找不到。难道大家都是和某强势审校一样只靠目测的么？",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "C++primer中一个疑似错误？",
                "updated_time": 1476856815,
                "url": "https://www.zhihu.com/api/v4/questions/51754882",
                "type": "question",
                "created": 1476856815,
                "question_type": "normal",
                "id": 51754882
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/127403013",
            "thumbnail": "",
            "created_time": 1476885694,
            "updated_time": 1476885694,
            "id": 127403013,
            "excerpt": "毒舌婊我为你感到拙急啊。你就这点水平怎么毒舌的起来？他那几篇博客啊，用他自己的话说，不堪卒读啊。只有中二少年才会去写那些东西。所以说，在这一点上，曾博没有任何变化啊。",
            "content": "毒舌婊我为你感到拙急啊。你就这点水平怎么毒舌的起来？他那几篇博客啊，用他自己的话说，不堪卒读啊。只有中二少年才会去写那些东西。所以说，在这一点上，曾博没有任何变化啊。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "曾博适合当特工吗？",
                "updated_time": 1476883705,
                "url": "https://www.zhihu.com/api/v4/questions/51771217",
                "type": "question",
                "created": 1476883705,
                "question_type": "normal",
                "id": 51771217
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/126739808",
            "thumbnail": "",
            "created_time": 1476539002,
            "updated_time": 1476539002,
            "id": 126739808,
            "excerpt": "我认为，Rust基本上代表了C++的best practise。先学Rust。等你Rust学好了，要么C++已经和Rust差不多了，要么C++已经倒闭了。",
            "content": "我认为，Rust基本上代表了C++的best practise。先学Rust。等你Rust学好了，要么C++已经和Rust差不多了，要么C++已经倒闭了。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何高效的学习C++？",
                "updated_time": 1476349241,
                "url": "https://www.zhihu.com/api/v4/questions/51560126",
                "type": "question",
                "created": 1476349241,
                "question_type": "normal",
                "id": 51560126
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/126585507",
            "thumbnail": "",
            "created_time": 1476444066,
            "updated_time": 1476444176,
            "id": 126585507,
            "excerpt": "可以用FreeIPA啊。再说了自己写一个LDAP server什么的也不是不行啊。 https://www.freeipa.org/page/Main_Page ",
            "content": "可以用FreeIPA啊。再说了自己写一个LDAP server什么的也不是不行啊。<br><br><a href=\"https://link.zhihu.com/?target=https%3A//www.freeipa.org/page/Main_Page\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">freeipa.org/page/Main_P</span><span class=\"invisible\">age</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "未使用微软活动目录“AD”的公司是如何进行企业身份认证的？",
                "updated_time": 1476351412,
                "url": "https://www.zhihu.com/api/v4/questions/51561398",
                "type": "question",
                "created": 1476351412,
                "question_type": "normal",
                "id": 51561398
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/126574555",
            "thumbnail": "",
            "created_time": 1476438530,
            "updated_time": 1476444857,
            "id": 126574555,
            "excerpt": "这是C++历史遗留问题。Stepanov向BS推荐忘了是谁写的STL的前身，BS觉得这个东西不是小好，也不是中好，而是大好，也就大力推荐赶紧加入C++标准里了。这可能是C++委员会唯一一个快速通过的重大功能。从现在来看，当时是太仓促了。比如他们就忘记了abstract data type里的abstract。STL最重要的就是提供trait，而不是具体的实现。从trait的角度看，你这个问题很简单，C++的vector实现了Array + Stack，而你需要的是Array + Deque。…",
            "content": "这是C++历史遗留问题。Stepanov向BS推荐忘了是谁写的STL的前身，BS觉得这个东西不是小好，也不是中好，而是大好，也就大力推荐赶紧加入C++标准里了。这可能是C++委员会唯一一个快速通过的重大功能。从现在来看，当时是太仓促了。比如他们就忘记了abstract data type里的abstract。STL最重要的就是提供trait，而不是具体的实现。从trait的角度看，你这个问题很简单，C++的vector实现了Array + Stack，而你需要的是Array + Deque。在这个问题上，坚持不引入trait的概念，思维就容易混乱了。所以我决定了，要学会C++得先学Rust。<br><br>要实现push_front是很简单的，把vector的存储当成一个circular buffer就可以了，但问题是，会导致vector这个struct多占一个字长。所以区分Array + Stack 和 Array + Deque 是有意义的。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么vector不支持push_front？",
                "updated_time": 1476341276,
                "url": "https://www.zhihu.com/api/v4/questions/51555037",
                "type": "question",
                "created": 1476341276,
                "question_type": "normal",
                "id": 51555037
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/126252629",
            "thumbnail": "",
            "created_time": 1476273722,
            "updated_time": 1476273750,
            "id": 126252629,
            "excerpt": "能凑字数的东西多的去了。比如轮子哥四级考了556他也能写上去单独占一行。",
            "content": "能凑字数的东西多的去了。比如轮子哥四级考了556他也能写上去单独占一行。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "程序猿简历里的套话很重要吗？",
                "updated_time": 1475911335,
                "url": "https://www.zhihu.com/api/v4/questions/51367504",
                "type": "question",
                "created": 1475895467,
                "question_type": "normal",
                "id": 51367504
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/125354632",
            "thumbnail": "",
            "created_time": 1475818509,
            "updated_time": 1475818668,
            "id": 125354632,
            "excerpt": "这和语言没有啥关系吧。 我的想法是借助BT的DHT来bootstrap自己的DHT。自己的DHT得像双曲DHT那样。 你关注了哪些话题组成一个 Merkle tree ，每个话题里的内容也组成一个 Merkle tree 。 Merkel tree在peer之间同步。 问题出在双曲DHT那里。双曲DHT是用浮点数的，排成一条线的节点多了，精度很快就不够用了。 最能理解双曲DHT理论的曾老师，却不屑和我们讨论这些问题。他认为微信才是最好的，他说了成功人士都用微信。",
            "content": "这和语言没有啥关系吧。<br><br>我的想法是借助BT的DHT来bootstrap自己的DHT。自己的DHT得像双曲DHT那样。<br><br>你关注了哪些话题组成一个 Merkle tree ，每个话题里的内容也组成一个 Merkle tree 。<br><br>Merkel tree在peer之间同步。<br><br>问题出在双曲DHT那里。双曲DHT是用浮点数的，排成一条线的节点多了，精度很快就不够用了。<br><br>最能理解双曲DHT理论的曾老师，却不屑和我们讨论这些问题。他认为微信才是最好的，他说了成功人士都用微信。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何利用现有语言自创一个［家庭版］知乎？",
                "updated_time": 1475720788,
                "url": "https://www.zhihu.com/api/v4/questions/51300661",
                "type": "question",
                "created": 1475690131,
                "question_type": "normal",
                "id": 51300661
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/125334755",
            "thumbnail": "",
            "created_time": 1475810429,
            "updated_time": 1475810856,
            "id": 125334755,
            "excerpt": "tensorflow在这里和numpy是一致的。这个dimension就是numpy里的axis。可以参考 numpy.argmax 比如 1 2 3\n4 5 6\n 这个数组的shape是 2 3 。axis就是从高到低。 axis-0 axis-1\n 2 3\n 而argmax参数里的axis，相当于逐个取出竖线右边对应的数组，分别进行argmax运算。 axis-0 | 2 3\naxis-1 2 | 3\n 不过，这个axis顺序是不好的，因为rank不同的数组，用相同的axis-N取出来的数组，他们的rank不同。同时也说明了TensorFlow虽然名字里有…",
            "content": "tensorflow在这里和numpy是一致的。这个dimension就是numpy里的axis。可以参考<a href=\"https://link.zhihu.com/?target=http%3A//docs.scipy.org/doc/numpy/reference/generated/numpy.argmax.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> numpy.argmax<i class=\"icon-external\"></i></a><br><br>比如<br><br><div class=\"highlight\"><pre><code class=\"language-text\">1 2 3\n4 5 6\n</code></pre></div><br>这个数组的shape是 2 3 。axis就是从高到低。<br><br><div class=\"highlight\"><pre><code class=\"language-text\">  axis-0  axis-1\n  2       3\n</code></pre></div><br>而argmax参数里的axis，相当于逐个取出竖线右边对应的数组，分别进行argmax运算。<br><br><div class=\"highlight\"><pre><code class=\"language-text\">axis-0  | 2   3\naxis-1    2 | 3\n</code></pre></div><br>不过，这个axis顺序是不好的，因为rank不同的数组，用相同的axis-N取出来的数组，他们的rank不同。同时也说明了TensorFlow虽然名字里有rank，和tensor一点关系都没有了。而按tensor的定义，rank-0 tensor始终都是scalar。从最高的维度开始的缺陷是，假如你函数的rank有多层嵌套的，因为始终最高的是0，多套几层你就晕了，要好好想一想才能知道目前最高的维度对应的是原始数组哪一个维度。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何理解tensorflow中的dimension？",
                "updated_time": 1475730320,
                "url": "https://www.zhihu.com/api/v4/questions/51309337",
                "type": "question",
                "created": 1475730281,
                "question_type": "normal",
                "id": 51309337
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/125255277",
            "thumbnail": "",
            "created_time": 1475760329,
            "updated_time": 1475760614,
            "id": 125255277,
            "excerpt": "NVidia笑了。这几个框架跑分全靠cuDNN，就算不用cuDNN，也是要用CUDA的。深度学习就是NVidia的私家花园。TensorFlow能垄断啥？",
            "content": "NVidia笑了。这几个框架跑分全靠cuDNN，就算不用cuDNN，也是要用CUDA的。深度学习就是NVidia的私家花园。TensorFlow能垄断啥？",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价余凯在朋友圈发表呼吁大家用caffe, mxnet等框架，避免使用TensorFlow？",
                "updated_time": 1476248893,
                "url": "https://www.zhihu.com/api/v4/questions/51292554",
                "type": "question",
                "created": 1475672145,
                "question_type": "normal",
                "id": 51292554
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/124856206",
            "thumbnail": "",
            "created_time": 1475549174,
            "updated_time": 1475551633,
            "id": 124856206,
            "excerpt": "鸡汤有毒 编程就是要避免任何有技术含量的事。举个简单的例子，a+++++++b 是不是看上去特别有技术含量，猛加括号是不是看上去特别笨，但是哪一种代码更好？ 比如，你要下载很多很多小文件，下载过程中需要能随时中断，你怎么办？ if not exist file_of_a:\n download url_of_a file_of_a.tmp\n mv file_of_a.tmp file_of_a\n Map Reduce也是一样的。不是下载一个文件，而是进行一个计算。假如能保证对于给定输入，输出一定是一样，…",
            "content": "鸡汤有毒<br><br>编程就是要避免任何有技术含量的事。举个简单的例子，a+++++++b 是不是看上去特别有技术含量，猛加括号是不是看上去特别笨，但是哪一种代码更好？<br><br>比如，你要下载很多很多小文件，下载过程中需要能随时中断，你怎么办？<br><br><div class=\"highlight\"><pre><code class=\"language-text\">if not exist file_of_a:\n    download url_of_a file_of_a.tmp\n    mv file_of_a.tmp file_of_a\n</code></pre></div><br>Map Reduce也是一样的。不是下载一个文件，而是进行一个计算。假如能保证对于给定输入，输出一定是一样，那么失败了就重新来一遍就好了。一个集群里，每台机器随时都可能挂掉，有很多进程在相互通信，你是去实现对这些相互通信的进程同步进行checkpoint和restore容易，还是把这个计算过程改成符合Map Reduce的要求容易？<br><br>是跑分刷数据容易，还是理清一团糟的业务逻辑容易？你想成为网红，该选哪条路很明显了吧。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价郝培强(Tinyfool)说编程技术含量不高一文？",
                "updated_time": 1475773347,
                "url": "https://www.zhihu.com/api/v4/questions/51114610",
                "type": "question",
                "created": 1475115338,
                "question_type": "normal",
                "id": 51114610
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/124188171",
            "thumbnail": "",
            "created_time": 1475122548,
            "updated_time": 1475122548,
            "id": 124188171,
            "excerpt": "所以我问了问题了 有哪些改良的求导符号？ - 导数 ，怎么又反过来邀请我答这个问题 我看到Knuth说过 In spite of these potential problems in extreme cases, Iverson's convention works beautifully in the vast majority of applications. It is, in fact, far less dangerous than most of the other notations of mathmatics, whose dark corners we have learned to avoid long ago. The safe use of Iverson's simple and…",
            "content": "所以我问了问题了<a href=\"https://www.zhihu.com/question/45576145\" class=\"internal\"> 有哪些改良的求导符号？ - 导数</a>，怎么又反过来邀请我答这个问题<br><br>我看到Knuth说过<br><br><blockquote>In spite of these potential problems in extreme cases, Iverson's convention works beautifully in the vast majority of applications. It is, in fact, far less dangerous than most of the other notations of mathmatics, whose dark corners we have learned to avoid long ago. The safe use of Iverson's simple and convenient idea is quite easy to learn.</blockquote>",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "数学的符号系统有没有缺陷？",
                "updated_time": 1475631877,
                "url": "https://www.zhihu.com/api/v4/questions/51117649",
                "type": "question",
                "created": 1475120174,
                "question_type": "normal",
                "id": 51117649
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/124128726",
            "thumbnail": "",
            "created_time": 1475076141,
            "updated_time": 1475722565,
            "id": 124128726,
            "excerpt": "曾老师好像说过，他喜欢地震",
            "content": "曾老师好像说过，他喜欢地震",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "曾老师为什么选择了硅谷，而不是去华尔街当quant?",
                "updated_time": 1475058263,
                "url": "https://www.zhihu.com/api/v4/questions/51097930",
                "type": "question",
                "created": 1475058263,
                "question_type": "normal",
                "id": 51097930
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/124038383",
            "thumbnail": "",
            "created_time": 1475036863,
            "updated_time": 1475036863,
            "id": 124038383,
            "excerpt": "这个不是叫灌么？",
            "content": "这个不是叫灌么？",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么很多人安装计算机操作系统的时候，习惯性的说是在‘做系统’？",
                "updated_time": 1394112725,
                "url": "https://www.zhihu.com/api/v4/questions/22953907",
                "type": "question",
                "created": 1394112725,
                "question_type": "normal",
                "id": 22953907
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/123701160",
            "thumbnail": "",
            "created_time": 1474856458,
            "updated_time": 1474857260,
            "id": 123701160,
            "excerpt": "就当你这个千万级登陆是每秒一千万客户端要登陆。那么你只要坚持2分多钟，全国人民都在线了。假设全国是14亿人，每个人都来登陆一次，大约在一小时内登陆完，每秒才不到40万登陆。一千万登陆坚持一个小时就是360亿用户啊，现在问题来了，你有这么多用户么？",
            "content": "就当你这个千万级登陆是每秒一千万客户端要登陆。那么你只要坚持2分多钟，全国人民都在线了。假设全国是14亿人，每个人都来登陆一次，大约在一小时内登陆完，每秒才不到40万登陆。一千万登陆坚持一个小时就是360亿用户啊，现在问题来了，你有这么多用户么？",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "关于高并发的两个问题？",
                "updated_time": 1472704570,
                "url": "https://www.zhihu.com/api/v4/questions/50233887",
                "type": "question",
                "created": 1472704570,
                "question_type": "normal",
                "id": 50233887
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/123695243",
            "thumbnail": "",
            "created_time": 1474854107,
            "updated_time": 1474854126,
            "id": 123695243,
            "excerpt": "学Erlang山寨一个Minecraft，半年业余时间正好",
            "content": "学Erlang山寨一个Minecraft，半年业余时间正好",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "希望在半年内利用业余时间掌握编程基础来【自娱自乐】，应该考虑从什么语言开始？",
                "updated_time": 1474728894,
                "url": "https://www.zhihu.com/api/v4/questions/50968431",
                "type": "question",
                "created": 1474719364,
                "question_type": "normal",
                "id": 50968431
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/123695030",
            "thumbnail": "",
            "created_time": 1474854032,
            "updated_time": 1474854055,
            "id": 123695030,
            "excerpt": "这问题也邀请我？ Go语言编程，这书是许式伟写的吧。当然没法看了。",
            "content": "这问题也邀请我？<br><br>Go语言编程，这书是许式伟写的吧。当然没法看了。",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Java开发者如何入门golang？",
                "updated_time": 1474885378,
                "url": "https://www.zhihu.com/api/v4/questions/51003349",
                "type": "question",
                "created": 1474815001,
                "question_type": "normal",
                "id": 51003349
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/123651951",
            "thumbnail": "",
            "created_time": 1474815458,
            "updated_time": 1474815458,
            "id": 123651951,
            "excerpt": "不能吧，参考 36. LVS: High Availability, Failover protection keepalived has the same split brain problem as heartbeat.",
            "content": "不能吧，参考<a href=\"https://link.zhihu.com/?target=http%3A//www.austintek.com/LVS/LVS-HOWTO/HOWTO/LVS-HOWTO.failover.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> 36. LVS: High Availability, Failover protection<i class=\"icon-external\"></i></a><br><br><blockquote>keepalived has the same split brain problem as heartbeat.</blockquote>",
            "is_copyable": true,
            "author": {
                "type": "people",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "is_org": false,
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "keepalived是如何解决或者防止脑裂问题的？",
                "updated_time": 1474803546,
                "url": "https://www.zhihu.com/api/v4/questions/50997425",
                "type": "question",
                "created": 1474803546,
                "question_type": "normal",
                "id": 50997425
            }
        }
    ]
}