{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=180",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=220",
        "is_start": false,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/113831226",
            "thumbnail": "",
            "created_time": 1469769593,
            "updated_time": 1469798325,
            "id": 113831226,
            "excerpt": "赚钱不可耻，可耻的是没赚到钱。曾老师至少搞了两次吧，一次是给九言打广告，一次是给某留学中介打广告，都没搞到几个钱。他就是眼红别人当网红赚的比他多。可是别人当网红都是互相捧臭脚的，哪有曾老师这样互相拆台，动不动就被禁言了的，这样当网红能赚到钱就有鬼了。偏偏曾老师就认为他把这些网红都黑一遍，他就能赚的比他们加起来都多了。 我建议曾老师好好向实力派网红学习一个 陈天同学和我在知乎上相识，后来线下交流过几…",
            "content": "赚钱不可耻，可耻的是没赚到钱。曾老师至少搞了两次吧，一次是给九言打广告，一次是给某留学中介打广告，都没搞到几个钱。他就是眼红别人当网红赚的比他多。可是别人当网红都是互相捧臭脚的，哪有曾老师这样互相拆台，动不动就被禁言了的，这样当网红能赚到钱就有鬼了。偏偏曾老师就认为他把这些网红都黑一遍，他就能赚的比他们加起来都多了。<br><br>我建议曾老师好好向实力派网红学习一个<br><br><blockquote>陈天同学和我在知乎上相识，后来线下交流过几次。我们俩背景很<b>相似</b>，<b>都</b>是技术出身，也<b>都</b>喜欢写blog来讨论技术和职业发展。天哥先拿了创新工场的投资开始创业做在线旅游，而我则刚刚加入Facebook进行例行工作。而后创业结束的他，回到Juniper并且随之transfer到美国，并且<b>直接</b>通过高级人才引进的渠道<b>直接</b>拿到绿卡，<b>非常</b>厉害。天哥的这篇“软件开发模式”我看了之后非常喜欢，所以这里推荐给大家，<br><br>作者：覃超<br>链接：<a class=\"internal\" href=\"https://zhuanlan.zhihu.com/p/20941886\">「漫谈技术」需要注意的软件开发模式 - 覃超帝国兴亡史 - 跨越美利坚&amp;技术精进之路 - 知乎专栏</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</blockquote>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "怎样看待曾老师曾经参加「九言」这样的变现活动？",
                "updated_time": 1469934317,
                "url": "https://www.zhihu.com/api/v4/questions/48998826",
                "type": "question",
                "created": 1469706959,
                "question_type": "normal",
                "id": 48998826
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/113734542",
            "thumbnail": "",
            "created_time": 1469716913,
            "updated_time": 1469754673,
            "id": 113734542,
            "excerpt": "Uber之前就换过啊 Migrating Uber from MySQL to PostgreSQL ",
            "content": "Uber之前就换过啊<a href=\"https://link.zhihu.com/?target=https%3A//www.yumpu.com/en/document/view/53683323/migrating-uber-from-mysql-to-postgresql\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> Migrating Uber from MySQL to PostgreSQL<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价 Uber 从 PostgreSQL 改为 MySQL？",
                "updated_time": 1469607480,
                "url": "https://www.zhihu.com/api/v4/questions/48945137",
                "type": "question",
                "created": 1469598618,
                "question_type": "normal",
                "id": 48945137
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/112882234",
            "thumbnail": "",
            "created_time": 1469347381,
            "updated_time": 1469347381,
            "id": 112882234,
            "excerpt": "浙大，我对不起你 - 知乎书馆 - 知乎专栏 看上去又通过立党认证了，不知道是咋回事。当然不排除是立党客串的",
            "content": "<a href=\"https://zhuanlan.zhihu.com/p/21703202\" class=\"internal\">浙大，我对不起你 - 知乎书馆 - 知乎专栏</a><br><br>看上去又通过立党认证了，不知道是咋回事。当然不排除是立党客串的",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么知乎还不永封假的大勃勃？",
                "updated_time": 1484558954,
                "url": "https://www.zhihu.com/api/v4/questions/48821389",
                "type": "question",
                "created": 1469290231,
                "question_type": "normal",
                "id": 48821389
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/112855042",
            "thumbnail": "",
            "created_time": 1469336191,
            "updated_time": 1470055655,
            "id": 112855042,
            "excerpt": "你这黑的。只有许式伟才会说什么巅峰之作吧。 ----------------------------- 理念再好，没有跑分的数字很难宣传啊。毕竟porn也是很重要的。 而LiFT还没能跑分是因为integer set library优化的速度很慢很慢，在抄袭了ppcg的默认参数之后还是很慢，要想调isl的参数不容易啊。 就来看一个简单的convolution Input :: (in 24 24)\nK1 :: (in 8 5 5)\nB1 :: (in 8)\nPool1 :: (out 8 10 10)\n\nrelu\"0 := (0.0 >. y)\nratio\"1 := (y / ((re…",
            "content": "你这黑的。只有许式伟才会说什么巅峰之作吧。<br><br>-----------------------------<br><br>理念再好，没有跑分的数字很难宣传啊。毕竟porn也是很重要的。<br><br>而LiFT还没能跑分是因为integer set library优化的速度很慢很慢，在抄袭了ppcg的默认参数之后还是很慢，要想调isl的参数不容易啊。<br><br>就来看一个简单的convolution<br><br><div class=\"highlight\"><pre><code class=\"language-text\">Input :: (in 24 24)\nK1 :: (in 8 5 5)\nB1 :: (in 8)\nPool1 :: (out 8 10 10)\n\nrelu\"0 := (0.0 &gt;. y)\nratio\"1 := (y / ((reduce 1 +) y))\n\nConv1 := ((((trim 4 4)\"2) (((oblique 2 +)\"4) (K1 ((*\"2 0)\"2 2) Input))) + B1)\n\nRelu1 := (relu Conv1)\nPool1 := (((stride 2 2)\"2) (((trim 1 1)\"2) (((oblique 2 &gt;.)\"4) (((duplicate 2 2)\"0) Relu1))))\n</code></pre></div><br>采用了ppcg的默认参数之后，那个schedule在分块之前直接生成AST会变成这样<br><br><div class=\"highlight\"><pre><code class=\"language-c\">  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">7</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">23</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n      <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c3</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">23</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">S22</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c3</span><span class=\"p\">);</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c4</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n          <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c5</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c5</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c5</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">S26</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">+</span> <span class=\"n\">c4</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c3</span> <span class=\"o\">+</span> <span class=\"n\">c5</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c4</span><span class=\"p\">,</span> <span class=\"n\">c5</span><span class=\"p\">);</span>\n        <span class=\"n\">S24</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c3</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">);</span>\n        <span class=\"n\">S25</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c3</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">7</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">19</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n      <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c3</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">19</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">S16</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c3</span><span class=\"p\">);</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c4</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n          <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c5</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c5</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">c5</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">S28</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">+</span> <span class=\"n\">c4</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">c3</span> <span class=\"o\">+</span> <span class=\"n\">c5</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">c4</span><span class=\"p\">,</span> <span class=\"n\">c5</span><span class=\"p\">);</span>\n        <span class=\"n\">S18</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">,</span> <span class=\"n\">c3</span><span class=\"p\">);</span>\n      <span class=\"p\">}</span>\n</code></pre></div><br>这就有了一个问题，convolution和max pooling分开了，也就是和再快也快不过CuDNN了，这是不可接受的。<br><br>使用更合适的参数优化，生成出来的AST是这样的<br><br><div class=\"highlight\"><pre><code class=\"language-c\"><span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c0</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c0</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">7</span><span class=\"p\">;</span> <span class=\"n\">c0</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">23</span><span class=\"p\">;</span> <span class=\"n\">c1</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">23</span><span class=\"p\">;</span> <span class=\"n\">c2</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"n\">S22</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">);</span>\n      <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c3</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c3</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">c4</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">;</span> <span class=\"n\">c4</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"n\">S26</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">+</span> <span class=\"n\">c3</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">+</span> <span class=\"n\">c4</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c3</span><span class=\"p\">,</span> <span class=\"n\">c4</span><span class=\"p\">);</span>\n          <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">c4</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">S24</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">);</span>\n          <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">c3</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">c4</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">c2</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">c1</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n            <span class=\"n\">S16</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n      <span class=\"n\">S25</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">);</span>\n      <span class=\"n\">S28</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n      <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">c1</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"o\">&amp;&amp;</span> <span class=\"p\">(</span><span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">S18</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">c1</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">-</span> <span class=\"mi\">4</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n</code></pre></div><br>这样把convolution和max pooling放在一起计算了，才有可能跑赢naive调用CuDNN的工具。<br><br>但是这个例子后者的优化所需时间大约是前者的4倍，而比如ConvNetJS那个MNIST DEMO，前者需要大约5分钟，后者我就懒得跑了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "怎样看待b大巅峰之作『LiFT深度学习框架』无人问津？",
                "updated_time": 1469415625,
                "url": "https://www.zhihu.com/api/v4/questions/48832018",
                "type": "question",
                "created": 1469334694,
                "question_type": "normal",
                "id": 48832018
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/112836444",
            "thumbnail": "",
            "created_time": 1469328673,
            "updated_time": 1469329032,
            "id": 112836444,
            "excerpt": "要赞助不可耻。至于轮子哥为啥需要别人赞助，那不过是因为轮子哥英语太烂，到了美国还不好好学，所以文档写不来嘛。之前我说轮子哥只会两个单词被举报了。确实是我错了。轮子哥现在已经会五个单词了。函数式编程的函数是如何实现的？ - vczh 的回答 即便如此，轮子哥英语有了150%的进步，大家都知道靠这五个单词是写不了什么文档的。 当然我是不支持赞助轮子哥的，因为他已经过气了。他那个gaylib早就跟不上历史发展的进程了，比如… ",
            "content": "要赞助不可耻。至于轮子哥为啥需要别人赞助，那不过是因为轮子哥英语太烂，到了美国还不好好学，所以文档写不来嘛。之前我说轮子哥只会两个单词被举报了。确实是我错了。轮子哥现在已经会五个单词了。<a class=\"internal\" href=\"https://www.zhihu.com/question/46558474/answer/101806052\">函数式编程的函数是如何实现的？ - vczh 的回答</a> 即便如此，轮子哥英语有了150%的进步，大家都知道靠这五个单词是写不了什么文档的。<br><br>当然我是不支持赞助轮子哥的，因为他已经过气了。他那个gaylib早就跟不上历史发展的进程了，比如<a class=\"internal\" href=\"https://www.zhihu.com/question/48702411/answer/112222910\">在轮子哥的 UnitTest.h 当中这段代码是什么意思？ - 知乎用户的回答</a> 就指出了，他搞的那个单元测试框架啊，比Catch至少落后几十年，四舍五入就是一个世纪啊。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价轮子哥vczh的开源项目向大家索要赞助的行为?",
                "updated_time": 1469328077,
                "url": "https://www.zhihu.com/api/v4/questions/48828880",
                "type": "question",
                "created": 1469328077,
                "question_type": "normal",
                "id": 48828880
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/112778597",
            "thumbnail": "",
            "created_time": 1469285549,
            "updated_time": 1486118952,
            "id": 112778597,
            "excerpt": "国外一般都缩写成CRT吧。根据Arnold原理，这个和中国应该没啥关系了。 这个据说是最早出现在孙子算经里，可是我们并不知道谁是这个孙子。因为传抄的过程中丢了很多东西，我们现在并不知道当初到底是怎样的，也存在一定可能是后人加进去的。不能完全排除这书是伪作的可能。因为没有求一术，最终结果是算不出来的，就不会出现在中国古代的算术书里。也就是那个题一定出现在求一术出现之后，且根据Arnold原理，几乎可以肯定是在孙子…",
            "content": "国外一般都缩写成CRT吧。根据Arnold原理，这个和中国应该没啥关系了。<br><br>这个据说是最早出现在孙子算经里，可是我们并不知道谁是这个孙子。因为传抄的过程中丢了很多东西，我们现在并不知道当初到底是怎样的，也存在一定可能是后人加进去的。不能完全排除这书是伪作的可能。因为没有求一术，最终结果是算不出来的，就不会出现在中国古代的算术书里。也就是那个题一定出现在求一术出现之后，且根据Arnold原理，几乎可以肯定是在孙子算经出现前传入中国的。因为隋书里就记载了有这么一本书，那么在隋朝或者更早，就已经传入中国了。<br><br>但是似乎是不符合中国古代算术发展的进程，求一术在传抄的过程出现了很大的偏差，才过了几百年，到宋朝时，已经不能根据祖传的求一术算出正确的结果了。很可能是因为把求一术中的减号误成了加号，导致计算时实际上是需要分两种情况讨论，而祖传的求一术并不能指出这个问题。才有了秦九韶的补丁。减号才是更自然的结果，原版求一术即便是在中国首先发现的，理应用的是减号。毕竟九章算术里约分已经用减号了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "中国剩余定理跟中国有什么关系？国外把它叫做什么定理？",
                "updated_time": 1384421587,
                "url": "https://www.zhihu.com/api/v4/questions/22032010",
                "type": "question",
                "created": 1384421587,
                "question_type": "normal",
                "id": 22032010
            }
        },
        {
            "type": "answer",
            "is_collapsed": true,
            "url": "https://www.zhihu.com/api/v4/answers/112722333",
            "thumbnail": "",
            "created_time": 1469259686,
            "updated_time": 1469259686,
            "id": 112722333,
            "excerpt": "张师留意五点共圆问题也很多年了。80年代，美国科学基金委员会的一位专家，写信给吴文俊先生，问能不能用机器证明这道题。因为中国在机器证明领域是走在世界前列的，吴先生是这个领域的权威。但这个问题根据吴先生的方法，在工作站上运行了20个小时，机器溢出，证明失败。 趣闻?|?江总书记与五点共圆问题 ",
            "content": "",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价吴文俊《东方数学的使命》？",
                "updated_time": 1469606104,
                "url": "https://www.zhihu.com/api/v4/questions/48798254",
                "type": "question",
                "created": 1469241169,
                "question_type": "normal",
                "id": 48798254
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/112128670",
            "thumbnail": "",
            "created_time": 1468979697,
            "updated_time": 1468982108,
            "id": 112128670,
            "excerpt": "上面一群吹牛的。看 Dijkstra 是怎么说的 Programming is one of the most difficult branches of applied \nmathematics; the poorer mathematicians had better remain pure \nmathematicians.https://www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD498.html ",
            "content": "上面一群吹牛的。看 Dijkstra 是怎么说的<br><br><blockquote><p>Programming is one of the most difficult branches of applied \nmathematics; the poorer mathematicians had better remain pure \nmathematicians.</p></blockquote><a href=\"https://link.zhihu.com/?target=https%3A//www.cs.utexas.edu/users/EWD/transcriptions/EWD04xx/EWD498.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">cs.utexas.edu/users/EWD</span><span class=\"invisible\">/transcriptions/EWD04xx/EWD498.html</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "程序员不需要知道太多数学，你认同吗？",
                "updated_time": 1468822294,
                "url": "https://www.zhihu.com/api/v4/questions/48617074",
                "type": "question",
                "created": 1468822294,
                "question_type": "normal",
                "id": 48617074
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/111781013",
            "thumbnail": "",
            "created_time": 1468821765,
            "updated_time": 1468988859,
            "id": 111781013,
            "excerpt": "曾博在时，我已悉数告知。你怎么还要提问，一看你就是冒充的，并不是真正的魂灵勃勃。还有不要传播谣言 1. 并没有使用J语言 2. 这个rank连问题都不是，哪里来的NP-complete与否? 3. 从对框架该怎么造的认识上讲，LiFT起点就在Caffe什么的前面，又怎么能超越Caffe呢？要想超越Caffe，首先要Caffe超越LiFT才行。 ---------------------- 这个教程最最重要的只是告诉你，自制框架完全是可行的。现有的框架完全不值得一用。 比如你看…",
            "content": "曾博在时，我已悉数告知。你怎么还要提问，一看你就是冒充的，并不是真正的魂灵勃勃。还有不要传播谣言<br><br>1. 并没有使用J语言<br>2. 这个rank连问题都不是，哪里来的NP-complete与否?<br>3. 从对框架该怎么造的认识上讲，LiFT起点就在Caffe什么的前面，又怎么能超越Caffe呢？要想超越Caffe，首先要Caffe超越LiFT才行。<br><br>----------------------<br><br>这个教程最最重要的只是告诉你，自制框架完全是可行的。现有的框架完全不值得一用。<br><br>比如你看这个问题<a class=\"internal\" href=\"https://www.zhihu.com/question/48178994\">请问如何将深度学习Caffe做成一个动态库，方便在其他应用程序中调用？</a> 你用LiFT这种思路搞，就问不出来这个问题了。毕竟你想生成什么代码就生成什么代码，直接生成一段C代码，你爱怎么链接就怎么链接。就为了几十行C代码，去搞什么\"功能强大的cmake支持\"完全没有必要啊。因为直接生成C代码了，我也不用管你怎么读写文件了，你爱用什么格式用什么格式。LiFT使用Python单纯只是因为有个现成的binding。<br><br>第二，有人吐槽过这个教程里自动求导还是用的是backpropagation。这个主要是为了适应教程的写法。因为教程里先写怎么解释，后写怎么编译。假如有人脑洞大开，直接在解释执行那里就把oblique什么的加进去，内存就爆了。比如输入仅仅是 25x25x3x3 ，输出是27x27，那么25*25*3*3*27*27*8 = 32805000，也就是假如用双精度浮点数，不管你怎么省，仅仅这一个jacobian就至少要用32M内存，里面还全是0和1。而编译时，借助integer set library和编译期计算，这个jacobian是可以消掉的。<br><br>同时你也要注意到，即便同样只是backpropagation，LiFT实现起来要比比如Caffe容易多了。Caffe里，你加个新的layer forward/backward全都要你自己实现，也就是backward需要你自己先把导数算出来。而在LiFT里不存在这个问题，只有在你新加入像sin, cos这种基本函数时，才需要提供导数，基本函数的导数公式直接无脑抄过来就好，并不需要你自己去算啊。<br><br>所以你看到了，layer反而让实现变麻烦了。看<a class=\"internal\" href=\"https://www.zhihu.com/question/46607672/answer/105261421\">RGB图像在CNN中如何进行convolution? - lixin liu 的回答</a>，你就知道这种按layer套layer思路来实现的框架往往model里还省略了不少参数，让model变得不容易看懂了。还动不动要自己写个新的layer，<a class=\"internal\" href=\"https://www.zhihu.com/question/46867253\">大家是否认为自动梯度＋小颗粒度操作符将是深度学习框架的主流？ </a>，假如CuDNN里不提供对应的实现，跑分肯定不行。<br><br>光有多维数组而没有rank，写起程序来非常麻烦。在<a class=\"internal\" href=\"https://www.zhihu.com/question/46616756/answer/106632200\">numpy中是否有什么办法扩展dot函数？ - 知乎用户的回答</a>中你可以看到，有了rank，在numpy中需要去找一个现成的函数或者自己用循环来实现的问题，可以通过rank套rank轻易解决。这也极大的简化了自动求导的实现，你看autograd，需要搞一个tape来支持循环等各种控制结构，各种现有的函数也要自己去包一遍，这个工作量是惊人的。<br><br>而mxnet不用integer set library而是自己拍脑袋实现了消数组的功能，所谓的symbolic api还是搞成了差不多按layer划分的方式。因为mxnet这样瞎搞是没法精确到数组中每个元素的使用情况的，能消去的数组非常有限。LiFT因为采用了传统的做法，而不是自己拍脑袋瞎搞一套出来，所以在消中间数组上能走的更远，这也顺便使得跳出layer的束缚成为可能。这就是为什么LiFT的model里可以把矩阵点乘，拆分成乘法和加法两个步骤来算的原因。<br><br>这个教程告诉我们，尊重常识，不要自己瞎搞，只要做一点微小工作，就可以造出好用的深度学习框架了。然而曾博终究还是去学C++了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "b大的深度学习框架有什么独到之处？",
                "updated_time": 1468819832,
                "url": "https://www.zhihu.com/api/v4/questions/48615510",
                "type": "question",
                "created": 1468819799,
                "question_type": "normal",
                "id": 48615510
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/111581073",
            "thumbnail": "",
            "created_time": 1468727254,
            "updated_time": 1468731456,
            "id": 111581073,
            "excerpt": "BBC的报道是这样的。Asian maths method offered to schools 看上去这并不是强制措施，只是建议学校可以试试这个方法。当然了，这并不是什么好方法，英国教育部还是推荐学校都去试试看。这完全是病急乱投医，开历史倒车。要是英国的学校真采用了，英国吃枣药丸。 英国大数学家，中国人民的老朋友，罗素和他的老师Whitehead在一百多年前一起写过一本书，Principia Mathematica，不知道比国内采用的只教十进制数的加减乘除的课本高…",
            "content": "BBC的报道是这样的。<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.bbc.com/news/education-36772954\" target=\"_blank\" rel=\"nofollow noreferrer\">Asian maths method offered to schools<i class=\"icon-external\"></i></a> 看上去这并不是强制措施，只是建议学校可以试试这个方法。当然了，这并不是什么好方法，英国教育部还是推荐学校都去试试看。这完全是病急乱投医，开历史倒车。要是英国的学校真采用了，英国吃枣药丸。<br><br>英国大数学家，中国人民的老朋友，罗素和他的老师Whitehead在一百多年前一起写过一本书，Principia Mathematica，不知道比国内采用的只教十进制数的加减乘除的课本高到哪里去了。特别适合从小学一年级开始学习。英国这完全是抱着金饭碗在要饭啊。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何看待英国教育部宣布小学开始采用中国数学教育方式？",
                "updated_time": 1468636193,
                "url": "https://www.zhihu.com/api/v4/questions/48503372",
                "type": "question",
                "created": 1468515205,
                "question_type": "normal",
                "id": 48503372
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/111327853",
            "thumbnail": "",
            "created_time": 1468584450,
            "updated_time": 1468584450,
            "id": 111327853,
            "excerpt": "tensorflow已经过气啦。自己不会写不要紧。赶紧照着我的教程造一个还来得及。7天自制深度学习框架(完) 提前为你讲解2017年主流深度学习框架的核心技术 下一代深度学习框架技术内幕 不知道比tensorflow高到哪里去了。垃圾tensorflow名字里都有tensor了，结果连个rank都没有。",
            "content": "tensorflow已经过气啦。自己不会写不要紧。赶紧照着我的教程造一个还来得及。<a href=\"https://zhuanlan.zhihu.com/p/21541240\" class=\"internal\">7天自制深度学习框架(完)</a> 提前为你讲解2017年主流深度学习框架的核心技术<a href=\"https://zhuanlan.zhihu.com/p/21519402\" class=\"internal\"> 下一代深度学习框架技术内幕</a> 不知道比tensorflow高到哪里去了。垃圾tensorflow名字里都有tensor了，结果连个rank都没有。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何高效的学习 TensorFlow 代码?",
                "updated_time": 1478843999,
                "url": "https://www.zhihu.com/api/v4/questions/41667903",
                "type": "question",
                "created": 1458641749,
                "question_type": "normal",
                "id": 41667903
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/111327289",
            "thumbnail": "",
            "created_time": 1468584184,
            "updated_time": 1468584184,
            "id": 111327289,
            "excerpt": "当然啦。深度学习框架他们造了这么多年还是这么垃圾，连我都看不下去了。 参考 7天自制深度学习框架(完) ",
            "content": "当然啦。深度学习框架他们造了这么多年还是这么垃圾，连我都看不下去了。<br><br>参考 <a class=\"internal\" href=\"https://zhuanlan.zhihu.com/p/21541240\">7天自制深度学习框架(完)</a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "大家是否认为自动梯度＋小颗粒度操作符将是深度学习框架的主流？",
                "updated_time": 1464475892,
                "url": "https://www.zhihu.com/api/v4/questions/46867253",
                "type": "question",
                "created": 1464475892,
                "question_type": "normal",
                "id": 46867253
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110791083",
            "thumbnail": "",
            "created_time": 1468332545,
            "updated_time": 1468332545,
            "id": 110791083,
            "excerpt": "当然是J语言啦",
            "content": "当然是J语言啦",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "想要理解函数式编程的思想，最好用哪种函数式编程语言入门？",
                "updated_time": 1468316331,
                "url": "https://www.zhihu.com/api/v4/questions/48415751",
                "type": "question",
                "created": 1468316279,
                "question_type": "normal",
                "id": 48415751
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110415095",
            "thumbnail": "",
            "created_time": 1468157874,
            "updated_time": 1468157874,
            "id": 110415095,
            "excerpt": "谁邀请我的？零基础的话，21天自制Minecraft怎么样?",
            "content": "谁邀请我的？零基础的话，21天自制Minecraft怎么样?",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "高三毕业党想利用暑假学电脑，零基础怎么进行？",
                "updated_time": 1468160092,
                "url": "https://www.zhihu.com/api/v4/questions/47692759",
                "type": "question",
                "created": 1466569703,
                "question_type": "normal",
                "id": 47692759
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110232547",
            "thumbnail": "",
            "created_time": 1468060051,
            "updated_time": 1468060051,
            "id": 110232547,
            "excerpt": "哭了，谁提的这个问题。曾老师都不理我了。",
            "content": "哭了，谁提的这个问题。曾老师都不理我了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "bhuztez和曾博是同一人吗？",
                "updated_time": 1484556727,
                "url": "https://www.zhihu.com/api/v4/questions/47697548",
                "type": "question",
                "created": 1466578440,
                "question_type": "normal",
                "id": 47697548
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110222346",
            "thumbnail": "",
            "created_time": 1468055760,
            "updated_time": 1468055911,
            "id": 110222346,
            "excerpt": "rust - Is there any reason not to use DoubleEndedIterator for iterators that don't iterate over a range of things? 最后发现是我理解错了。 这个 DoubleEndedIterator就是有头尾两个位置的 | e1 | e2 | e3 | e4 |\n^ ^\nhead tail\n\nrev()\n\n| e1 | e2 | e3 | e4 |\n^ ^\ntail head\n\n等 head 和 tail 撞上了就结束了 和 C++ 里的双向的iterator概念不一样。 这是双端Iterator",
            "content": "<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//stackoverflow.com/questions/31818329/is-there-any-reason-not-to-use-doubleendediterator-for-iterators-that-dont-iter\" target=\"_blank\" rel=\"nofollow noreferrer\">rust - Is there any reason not to use DoubleEndedIterator for iterators that don't iterate over a range of things?<i class=\"icon-external\"></i></a><br><br>最后发现是我理解错了。<br><br>这个 DoubleEndedIterator就是有头尾两个位置的<br><br><div class=\"highlight\"><pre><code class=\"language-text\">| e1 | e2 | e3 | e4 |\n^                   ^\nhead                tail\n\nrev()\n\n| e1 | e2 | e3 | e4 |\n^                   ^\ntail                head\n</code></pre></div>等 head 和 tail 撞上了就结束了<br><br>和 C++ 里的双向的iterator概念不一样。<br><br>这是双端Iterator",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Rust的Iterator要怎么才能正确实现rev？",
                "updated_time": 1468042142,
                "url": "https://www.zhihu.com/api/v4/questions/48309758",
                "type": "question",
                "created": 1468041364,
                "question_type": "normal",
                "id": 48309758
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110045196",
            "thumbnail": "",
            "created_time": 1467967663,
            "updated_time": 1467967663,
            "id": 110045196,
            "excerpt": "按 Beta testing rustup.rs 这里的说法， This is also in the docs! Stable won't support components until 1.8. I \ndon't intend to fix this in the UI because I'm just waiting for 1.8 to \ncome out and fix it 然而现在都1.10了",
            "content": "按  <a href=\"https://link.zhihu.com/?target=https%3A//internals.rust-lang.org/t/beta-testing-rustup-rs/3316/32\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Beta testing rustup.rs<i class=\"icon-external\"></i></a>  这里的说法，<br><br><blockquote>This is also in the docs! Stable won't support components until 1.8. I \ndon't intend to fix this in the UI because I'm just waiting for 1.8 to \ncome out and fix it<br></blockquote><br>然而现在都1.10了",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "rustup/multirust添加不了target怎么解决？",
                "updated_time": 1467967861,
                "url": "https://www.zhihu.com/api/v4/questions/46337084",
                "type": "question",
                "created": 1463238478,
                "question_type": "normal",
                "id": 46337084
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/110001315",
            "thumbnail": "",
            "created_time": 1467953348,
            "updated_time": 1467955217,
            "id": 110001315,
            "excerpt": "曾博大约的确是死了 特别提醒 大勃勃 应该肯定不是曾博，大家不要上当受骗",
            "content": "曾博大约的确是死了<br><br>特别提醒<a href=\"https://www.zhihu.com/people/da-bo-bo-78\" class=\"internal\"> 大勃勃</a> 应该肯定不是曾博，大家不要上当受骗",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价小勃勃再次永封？",
                "updated_time": 1484558419,
                "url": "https://www.zhihu.com/api/v4/questions/48272730",
                "type": "question",
                "created": 1467948872,
                "question_type": "normal",
                "id": 48272730
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/109969834",
            "thumbnail": "",
            "created_time": 1467942579,
            "updated_time": 1467942579,
            "id": 109969834,
            "excerpt": "不能啊。 首先问题在于美国在开历史倒车。分工才能提高效率。人人都开车是不合理的。应该大力发展公共交通，让老司机来开车。这样他就没必要提这个问题了。也就是从根本上消除这个问题了。 第二个问题是美国人不识字。更可悲的是中国竟然在道路命名上向文盲国家看齐。正确的思路是参考韵目代日 ，每条路都统一用两个字，比如国道第一个字都是国，省道第一个字是用每个省的名称，这样就有足够区分度了。也不需要用花花绿绿的图了，…",
            "content": "不能啊。<br><br>首先问题在于美国在开历史倒车。分工才能提高效率。人人都开车是不合理的。应该大力发展公共交通，让老司机来开车。这样他就没必要提这个问题了。也就是从根本上消除这个问题了。<br><br>第二个问题是美国人不识字。更可悲的是中国竟然在道路命名上向文盲国家看齐。正确的思路是参考<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E9%259F%25B5%25E7%259B%25AE%25E4%25BB%25A3%25E6%2597%25A5\" target=\"_blank\" rel=\"nofollow noreferrer\">韵目代日<i class=\"icon-external\"></i></a>，每条路都统一用两个字，比如国道第一个字都是国，省道第一个字是用每个省的名称，这样就有足够区分度了。也不需要用花花绿绿的图了，对色觉障碍人士更友好。<br><br>第三个问题是App本身就是问题。Google应该以IETF标准地图协议，使用Google账号登录可以免费使用的形式提供服务，至于怎么用是你自己的事，无论你是用第三方软件，还是官方软件。最好的是连额外的软件都不需要，背几个口诀就能用了。<br><br>他说的这个问题完全是微不足道的。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "根据王垠在《Google Maps的设计问题》体现的UE水平，是否胜任百度UE总监的职位？",
                "updated_time": 1467786644,
                "url": "https://www.zhihu.com/api/v4/questions/48201663",
                "type": "question",
                "created": 1467777541,
                "question_type": "normal",
                "id": 48201663
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/109866689",
            "thumbnail": "",
            "created_time": 1467882820,
            "updated_time": 1467883571,
            "id": 109866689,
            "excerpt": "循环优化最重要的方法当然是polyhedral model了，把affine变换都统一起来了。GCC里那个graphite，还有LLVM的Poly，都是基于polyhedral model的 这里面同样重要的是，有某个语句用到数组的哪个元素的精确信息。比如就可以用来消除中间数组，减少内存占用，参考 下一代深度学习框架技术内幕 (打个广告就跑",
            "content": "循环优化最重要的方法当然是polyhedral model了，把affine变换都统一起来了。GCC里那个graphite，还有LLVM的Poly，都是基于polyhedral model的<br><br>这里面同样重要的是，有某个语句用到数组的哪个元素的精确信息。比如就可以用来消除中间数组，减少内存占用，参考 <a class=\"internal\" href=\"https://zhuanlan.zhihu.com/p/21519402\">下一代深度学习框架技术内幕</a> (打个广告就跑",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "基于中间代码的优化中 循环的查找算法有哪些呢 循环的优化方法又有哪些？",
                "updated_time": 1452615071,
                "url": "https://www.zhihu.com/api/v4/questions/39430727",
                "type": "question",
                "created": 1452615071,
                "question_type": "normal",
                "id": 39430727
            }
        }
    ]
}