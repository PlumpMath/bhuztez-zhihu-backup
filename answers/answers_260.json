{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=240",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=280",
        "is_start": false,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/98950194",
            "thumbnail": "",
            "created_time": 1462365561,
            "updated_time": 1462366983,
            "id": 98950194,
            "excerpt": "我认为这个偏差还是比较大的，除非他们刷算法题的时候，碰到没见过的题目，都会先去StackOverflow上查一下，十有八九能复制个代码过来，直接提交一次通过。",
            "content": "我认为这个偏差还是比较大的，除非他们刷算法题的时候，碰到没见过的题目，都会先去StackOverflow上查一下，十有八九能复制个代码过来，直接提交一次通过。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "解 ACM 题的能力真的代表编程能力吗？",
                "updated_time": 1462445521,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/45323673",
                "created": 1462252766,
                "id": 45323673
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/98104942",
            "thumbnail": "",
            "created_time": 1461926153,
            "updated_time": 1461926153,
            "id": 98104942,
            "excerpt": "我感觉这个不错 (逃 ccjs v1.2 by Carter Feldman ",
            "content": "我感觉这个不错 (逃<br><br><a href=\"https://link.zhihu.com/?target=http%3A//carterf.com/cf.gy/ccjsPublic/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ccjs v1.2 by Carter Feldman<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "毫无编程基础的小白准备学习C语言，用VC6还是VS2015？",
                "updated_time": 1456878154,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/40929777",
                "created": 1456878154,
                "id": 40929777
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/96891960",
            "thumbnail": "",
            "created_time": 1461502810,
            "updated_time": 1461507987,
            "id": 96891960,
            "excerpt": "& & \\sum_{i=0}^{y-k}{x \\choose i}{y \\choose i+k} \\\\\n&=& \\sum_{i=0}^{y-k}{x \\choose i}{y \\choose y-k-i} \\\\\n&=& {x+y \\choose y-k}\n 先计算好 n! \\equiv n \\times (n-1)! \\pmod p n!^{-1} \\equiv n^{-1} \\times (n-1)!^{-1} \\pmod p",
            "content": "<img src=\"https://www.zhihu.com/equation?tex=%26+%26+%5Csum_%7Bi%3D0%7D%5E%7By-k%7D%7Bx+%5Cchoose+i%7D%7By+%5Cchoose+i%2Bk%7D+%5C%5C%0A%26%3D%26+%5Csum_%7Bi%3D0%7D%5E%7By-k%7D%7Bx+%5Cchoose+i%7D%7By+%5Cchoose+y-k-i%7D+%5C%5C%0A%26%3D%26+%7Bx%2By+%5Cchoose+y-k%7D%0A\" alt=\"&amp; &amp; \\sum_{i=0}^{y-k}{x \\choose i}{y \\choose i+k} \\\\\n&amp;=&amp; \\sum_{i=0}^{y-k}{x \\choose i}{y \\choose y-k-i} \\\\\n&amp;=&amp; {x+y \\choose y-k}\n\" eeimg=\"1\"><br><br>先计算好<br><br><img src=\"https://www.zhihu.com/equation?tex=n%21+%5Cequiv+n+%5Ctimes+%28n-1%29%21+%5Cpmod+p\" alt=\"n! \\equiv n \\times (n-1)! \\pmod p\" eeimg=\"1\"><br><br><img src=\"https://www.zhihu.com/equation?tex=n%21%5E%7B-1%7D+%5Cequiv+n%5E%7B-1%7D+%5Ctimes+%28n-1%29%21%5E%7B-1%7D+%5Cpmod+p\" alt=\"n!^{-1} \\equiv n^{-1} \\times (n-1)!^{-1} \\pmod p\" eeimg=\"1\">",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何解决这个 ACM 组合数学问题？",
                "updated_time": 1461504545,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/44091601",
                "created": 1461497488,
                "id": 44091601
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/95880722",
            "thumbnail": "",
            "created_time": 1461041246,
            "updated_time": 1461119622,
            "id": 95880722,
            "excerpt": "应该都是没入门的水平。 我想，两者都以代码都写不利索的高中生为主，前者的水平一般来说要比后者还要低几个数量级。我先假设你看过了，http://zhuanlan.zhihu.com/p/20725914 。回到十年之前，某王垠的粉丝X，王垠的那几篇文章，差不多都是树起几个权威，再把权威吹捧一番，显得自己很高明的样子，比如什么完全用Linux工作，他能看了又看，还到处向人推荐。他那时不仅代码写不利索，连理解几行很简单的代码都很吃力。这才是王垠粉丝水平的典型情…",
            "content": "应该都是没入门的水平。<br><br>我想，两者都以代码都写不利索的高中生为主，前者的水平一般来说要比后者还要低几个数量级。我先假设你看过了，<a class=\"internal\" href=\"http://zhuanlan.zhihu.com/p/20725914\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/p/20</span><span class=\"invisible\">725914</span><span class=\"ellipsis\"></span></a>。回到十年之前，某王垠的粉丝X，王垠的那几篇文章，差不多都是树起几个权威，再把权威吹捧一番，显得自己很高明的样子，比如什么完全用Linux工作，他能看了又看，还到处向人推荐。他那时不仅代码写不利索，连理解几行很简单的代码都很吃力。这才是王垠粉丝水平的典型情况。<br><br>而当时轮子哥应该还没有写他那篇后来能吹上近十年的构造正则表达式引擎，所以我没有机会以轮子哥为榜样，即便轮子哥已经写了，我也不会以他为榜样。不过，当时的我确实以为能写个正则表达式引擎很厉害，全然不顾我自己已经写过类似的东西了。看别人的博客，哪怕是一大帮人写博客互相捧臭脚，我却总是傻乎乎的认为，我看完一篇博客才这么点时间，他们竟然把这么多东西都写出来了，他们水平一定都很高。这种心态倒是很接近前段时间很火的彭飞啊。所以，轮子哥粉丝的水平也不见得高到哪里去。很多年以后我才发现这完全是错觉嘛，很多人都是花了很长时间搞了个东西出来，自己觉得很得意才会去写一篇博客。<br><br>我猜曾老师想说的是。俗话说，取法于上，仅得为中，取法于中，故为其下。假如你以他们两个为榜样，就是自己给自己设定了一个非常低的上限，这对你个人的提高是不利的。我再来举个例子，回到十年前，某人(Y)至少在我的印象里是属于偏向文艺青年那种类型的，有一天，我和X装模作样的讨论几个小程序的无聊问题。Y突然冒出来说了一大堆我完全超过我理解范围的东西，说什么他要支持什么女权运动，什么无论男女权利义务都应该是平等的不然就是歧视，还有什么他要证明女性做什么都比男性强，其中应该是包括写程序的。我当场就楞住了。我当时的想法是既然21世纪是生物的世纪，在能人工合成胚胎之前，男人解决了自己生存问题之后，都应该去研究单性繁殖技术。毕竟在现有社会环境下，这技术让女性去研发是不合适的。<br><br>回到写程序，即便不提Ada，早期程序员多数是女性，这都能形成男性更适合写程序的偏见，靠个人的努力真的能改变这个吗。另一方面，正是因为Y能在比如写程序这些事上，跟换了个人似的，能临时召唤出程序员三美德之一Hubris，不以任何人为榜样，总是想着怎么比别人做的更好，后来的水平很快就远远超过X了。当然了，这仍然属于不能摆脱要和别人比较的心态，所以呢Y把很多时间浪费在了一些大路货的缺陷上。不过，这个问题在曾老师身上要严重的多。曾老师最喜欢比来比去了，一有发现，比如A比不过B，<b><u>就巴不得第二天就让全世界都知道曾老师把A命名为三本了</u></b>。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "以轮子哥为榜样的程序员的水平如何？",
                "updated_time": 1461030661,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/43551390",
                "created": 1461026967,
                "id": 43551390
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/95360340",
            "thumbnail": "",
            "created_time": 1460690854,
            "updated_time": 1460705234,
            "id": 95360340,
            "excerpt": "参考 http://zhuanlan.zhihu.com/p/19928302 下面的评论 类似的，当任意一个计数为0时，比如 3 0 。我们留下多出的3个，取出剩下的数值，必然是两个数各占1/3，其他数共占1/3 。 比如你这个例子 1 1 1 1 2 2 2 2 2 2 3 3 3 3 | 3 4 | 4 4 |\n 1:0 | 3:0 | | 4:2\n 2:2 | 2:1 | | 2:1\n -----------\n 1:4 | 3:1 |\n 2:4 | 2:1 |\n ?:4 | ?:1 | 在除了最后一组外，一个数最多就只能占1/3。除非在最后一组占 > 1/3，否则无法在总数上占 > 1/3",
            "content": "参考 <a href=\"http://zhuanlan.zhihu.com/p/19928302\" class=\"internal\"><span class=\"invisible\">http://</span><span class=\"visible\">zhuanlan.zhihu.com/p/19</span><span class=\"invisible\">928302</span><span class=\"ellipsis\"></span></a> 下面的评论<br><br>类似的，当任意一个计数为0时，比如 3 0 。我们留下多出的3个，取出剩下的数值，必然是两个数各占1/3，其他数共占1/3 。<br><br>比如你这个例子<br><br><div class=\"highlight\"><pre><code class=\"language-text\">1 1 1 1 2 2 2 2 2 2 3 3 3 3 | 3 4 | 4 4 |\n                        1:0 | 3:0 |     | 4:2\n                        2:2 | 2:1 |     | 2:1\n                        -----------\n                        1:4 | 3:1 |\n                        2:4 | 2:1 |\n                        ?:4 | ?:1 |\n</code></pre></div><br>在除了最后一组外，一个数最多就只能占1/3。除非在最后一组占 &gt; 1/3，否则无法在总数上占 &gt; 1/3",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Leetcode Majority Element II,如何证明评论区算法是正确的?",
                "updated_time": 1460633614,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/43174034",
                "created": 1460626750,
                "id": 43174034
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/94638902",
            "thumbnail": "",
            "created_time": 1460277950,
            "updated_time": 1460277950,
            "id": 94638902,
            "excerpt": "有这时间多看几篇论文不好？ DIALYZER: a DIscrepancy AnaLYZer for ERlang programs TYPER: A Type Annotator of Erlang Code Pratical type inference based on success typings Gradual Typing of Erlang programs: A Wrangler Experience fib.erl -module(fib).\n-compile(export_all).\n\nfib(1) ->\n 1;\nfib(2) ->\n 1;\nfib(N) when N > 2 ->\n fib(N-1) + fib(N-2).\n\n运行 typer $ typer fib.erl \n\n%% File: \"fib.erl\"\n%% -----…",
            "content": "有这时间多看几篇论文不好？<br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/\" target=\"_blank\" rel=\"nofollow noreferrer\">DIALYZER: a DIscrepancy AnaLYZer for ERlang programs<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//user.it.uu.se/%7Etobiasl/publications/typer.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">TYPER: A Type Annotator of Erlang Code<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/publications/succ_types.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">Pratical type inference based on success typings<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/publications/wrangler.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">Gradual Typing of Erlang programs: A Wrangler Experience<i class=\"icon-external\"></i></a><br><br>fib.erl<br><div class=\"highlight\"><pre><code class=\"language-text\">-module(fib).\n-compile(export_all).\n\nfib(1) -&gt;\n   1;\nfib(2) -&gt;\n   1;\nfib(N) when N &gt; 2 -&gt;\n   fib(N-1) + fib(N-2).\n</code></pre></div>运行 typer<br><div class=\"highlight\"><pre><code class=\"language-text\">$ typer fib.erl \n\n%% File: \"fib.erl\"\n%% ---------------\n-spec fib(pos_integer()) -&gt; pos_integer().\n</code></pre></div><br>在我看来不知道比PySonar高到哪里去了",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何看待王垠回应彭飞的文章？",
                "updated_time": 1460090135,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/42320371",
                "created": 1460090135,
                "id": 42320371
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/94592116",
            "thumbnail": "",
            "created_time": 1460255859,
            "updated_time": 1460255859,
            "id": 94592116,
            "excerpt": "Erlang 19.0 Garbage Collector ",
            "content": "<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=https%3A//www.erlang-solutions.com/blog/erlang-19-0-garbage-collector.html\" target=\"_blank\" rel=\"nofollow noreferrer\">Erlang 19.0 Garbage Collector<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "讨论Erlang VM中的GC，它是一个伪命题吗？",
                "updated_time": 1460274878,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/42555311",
                "created": 1460218725,
                "id": 42555311
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/94296092",
            "thumbnail": "",
            "created_time": 1460111557,
            "updated_time": 1460121090,
            "id": 94296092,
            "excerpt": "我只知道Dialyzer里的PLT指的是Persistent Lookup Table。Dialyzer最不好的地方就是用之前得先生成PLT，这个得花不少时间，不同的版本还不一样得重新生成。动态类型语言的Type Inference，我建议你先学习一个Dialyzer/Typer。另外就是没必要在他们两个无聊的讨论上浪费时间。也顺便建议他们两个先学习一个Dialyzer/Typer再吵架。",
            "content": "我只知道Dialyzer里的PLT指的是Persistent Lookup Table。Dialyzer最不好的地方就是用之前得先生成PLT，这个得花不少时间，不同的版本还不一样得重新生成。动态类型语言的Type Inference，我建议你先学习一个Dialyzer/Typer。另外就是没必要在他们两个无聊的讨论上浪费时间。也顺便建议他们两个先学习一个Dialyzer/Typer再吵架。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "PLT零基础的人，要看懂王垠和彭飞在《王垠，请别再欺负我们读书少》里讨论的内容，需要掌握哪些知识？",
                "updated_time": 1460155961,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/42315543",
                "created": 1460087127,
                "id": 42315543
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/93423671",
            "thumbnail": "",
            "created_time": 1459609765,
            "updated_time": 1459610772,
            "id": 93423671,
            "excerpt": "上面两个高票答案废话了这么多，完全没法照着操作的。 我发现很多公司都想不好面试问什么问题，往往就随便搜个什么XX面试宝典挑个几题就来问了。或者问来问去就是固定的几个问题，而且早就烂大街了。 特别推荐一种非常容易执行的办法。 要求每个人把当天到底关于哪些问题查了StackOverflow记录下来。 过一段时间，随机抽另外一个人，看看能不能在固定时间(比如10分钟)内找到答案解决问题(允许查任何公开资料)。不能的话这题就不…",
            "content": "上面两个高票答案废话了这么多，完全没法照着操作的。<br><br>我发现很多公司都想不好面试问什么问题，往往就随便搜个什么XX面试宝典挑个几题就来问了。或者问来问去就是固定的几个问题，而且早就烂大街了。<br><br>特别推荐一种非常容易执行的办法。<br><br>要求每个人把当天到底关于哪些问题查了StackOverflow记录下来。<br><br>过一段时间，随机抽另外一个人，看看能不能在固定时间(比如10分钟)内找到答案解决问题(允许查任何公开资料)。不能的话这题就不要了。<br><br>能解决的题目，改进一下表述方式，使得看上去像一个独立的问题。<br><br>面试时就像recaptcha那样，一题是正式题，一题是测试题，测试题有问题就需要继续改进，正式题使用N次之后就必须淘汰。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "公司怎么识别水货程序员&程序员谈薪水？",
                "updated_time": 1459298544,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41529995",
                "created": 1458308114,
                "id": 41529995
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/92036776",
            "thumbnail": "",
            "created_time": 1458728960,
            "updated_time": 1458728960,
            "id": 92036776,
            "excerpt": "你们都不看Github么? Search · location:China · GitHub 第二名竟然是阮一峰老师 ...",
            "content": "你们都不看Github么?<br><br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/search%3Fl%3D%26o%3Ddesc%26q%3Dlocation%253AChina%26ref%3Dadvsearch%26s%3Dfollowers%26type%3DUsers%26utf8%3D%25E2%259C%2593\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Search · location:China · GitHub<i class=\"icon-external\"></i></a><br><br>第二名竟然是阮一峰老师 ...",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "目前中国顶级优秀的程序员都有谁？",
                "updated_time": 1420719487,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27462559",
                "created": 1420650881,
                "id": 27462559
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/91920216",
            "thumbnail": "",
            "created_time": 1458657907,
            "updated_time": 1458657937,
            "id": 91920216,
            "excerpt": "看了一下发现就TODO的内容比较有吸引力",
            "content": "看了一下发现就TODO的内容比较有吸引力",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "看自己几年前写的代码是怎样的一种感受？",
                "updated_time": 1454487576,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/40097501",
                "created": 1454480841,
                "id": 40097501
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/91884171",
            "thumbnail": "",
            "created_time": 1458640783,
            "updated_time": 1458640783,
            "id": 91884171,
            "excerpt": "Java可以解决啊。用gcj编译就好了。 参考 用gcj编译SWT程序 (逃",
            "content": "Java可以解决啊。用gcj编译就好了。<br><br>参考<a href=\"https://link.zhihu.com/?target=http%3A//bhuztez.github.io/2013/compiling-swt-application-with-gcj.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> 用gcj编译SWT程序<i class=\"icon-external\"></i></a> (逃",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Java、.NET 桌面程序的冷启动时间是无法解决的问题吗？",
                "updated_time": 1458667885,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41658681",
                "created": 1458628423,
                "id": 41658681
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/91810779",
            "thumbnail": "",
            "created_time": 1458613489,
            "updated_time": 1458613489,
            "id": 91810779,
            "excerpt": "IFC: @tor2600 asked, Are the characters in The IT Crowd based on real people? GL: Roy is me in my 20s and 30s and I punish Roy for all the terrible\n things I did to girls in my 20s and 30s. Roy is kind of a voodoo doll \nwho I can punish. Moss is me before I was interested in girls and Jen \n…There’s a lot of my wife in Jen. She’s a woman coming into a male \nenvironment, which is what happened …",
            "content": "<blockquote><p>IFC: @tor2600 asked, Are the characters in The IT Crowd based on real people?</p><br><p>GL: Roy is me in my 20s and 30s and I punish Roy for all the terrible\n things I did to girls in my 20s and 30s.  Roy is kind of a voodoo doll \nwho I can punish. Moss is me before I was interested in girls and Jen \n…There’s a lot of my wife in Jen. She’s a woman coming into a male \nenvironment, which is what happened with my wife. Jen represents all \nthat. Douglas is a just generic rich guy who you can make do all the \ngeneric rich guy things. Stuff that people like Richard Branson or \nConrad Black are always doing. <br></p><br><p><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.ifc.com/2010/08/a-chat-with-graham-linehan-cre\" target=\"_blank\" rel=\"nofollow noreferrer\">—— A Chat with Graham Linehan Creator of The IT Crowd<i class=\"icon-external\"></i></a></p></blockquote>(逃",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "IT狂人《 IT crowd 》有人物原型吗, 分别是谁？",
                "updated_time": 1458613357,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41641439",
                "created": 1458577112,
                "id": 41641439
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/91175279",
            "thumbnail": "",
            "created_time": 1458213080,
            "updated_time": 1458213165,
            "id": 91175279,
            "excerpt": "别用MinGW，用MinGW-w64 参考 c++ - -O1/2/3 with -std=c++1y/11/98 (逃",
            "content": "别用MinGW，用MinGW-w64<br><br>参考<a href=\"https://link.zhihu.com/?target=http%3A//stackoverflow.com/questions/29450016/o1-2-3-with-std-c1y-11-98-if-cmath-is-included-im-getting-error-hypo\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> c++ - -O1/2/3 with -std=c++1y/11/98<i class=\"icon-external\"></i></a><br><br>(逃",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "MinGW下为何一旦同时使用Release模式和math库，就会编译失败？",
                "updated_time": 1458212938,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41488651",
                "created": 1458212938,
                "id": 41488651
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/91014562",
            "thumbnail": "",
            "created_time": 1458126070,
            "updated_time": 1458135139,
            "id": 91014562,
            "excerpt": "我感觉很多人面试就是网上随便找个题来问了，自己问之前看都没看具体问题是什么。我想我准备面试的方法完全不对嘛，怪不得都通不过。 比如最近某公司面试问了个题，之后我都不知道答啥好了，最后当然是挂了。 HTTP. 用户名密码登录应该用什么method。我说POST啊。他竟然告诉我再想想还能用什么？我想了半天没想出来。结果他告诉我还能用GET。接着又问要安全应该怎么办？我说要安全么，那得用HTTPS吧。他说先不管HTTPS。那我真想…",
            "content": "我感觉很多人面试就是网上随便找个题来问了，自己问之前看都没看具体问题是什么。我想我准备面试的方法完全不对嘛，怪不得都通不过。<br><br>比如最近某公司面试问了个题，之后我都不知道答啥好了，最后当然是挂了。<br><br>HTTP. 用户名密码登录应该用什么method。我说POST啊。他竟然告诉我再想想还能用什么？我想了半天没想出来。结果他告诉我还能用GET。接着又问要安全应该怎么办？我说要安全么，那得用HTTPS吧。他说先不管HTTPS。那我真想不出来了。现在他告诉我，应该用POST，不要用GET。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何看待我这次滴滴业务核心部门的前端面试？",
                "updated_time": 1457857072,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41263135",
                "created": 1457688792,
                "id": 41263135
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/90254643",
            "thumbnail": "",
            "created_time": 1457683309,
            "updated_time": 1457683309,
            "id": 90254643,
            "excerpt": "不是早就有定论了，已经实现了的都只能算计算量大的计算机，还没实现的才能称的上是人工智能。",
            "content": "不是早就有定论了，已经实现了的都只能算计算量大的计算机，还没实现的才能称的上是人工智能。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "人工智能跟计算量大的计算机的分界线在哪里？",
                "updated_time": 1457682492,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41259107",
                "created": 1457682442,
                "id": 41259107
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/89473658",
            "thumbnail": "",
            "created_time": 1457248684,
            "updated_time": 1457248684,
            "id": 89473658,
            "excerpt": "",
            "content": "<noscript><img data-rawheight=\"292\" data-rawwidth=\"620\" src=\"https://pic3.zhimg.com/25f61b546034ce43070da3a29da38d66_b.png\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic3.zhimg.com/25f61b546034ce43070da3a29da38d66_r.png\"></noscript><img data-rawheight=\"292\" data-rawwidth=\"620\" src=\"//zhstatic.zhihu.com/assets/zhihu/ztext/whitedot.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"620\" data-original=\"https://pic3.zhimg.com/25f61b546034ce43070da3a29da38d66_r.png\" data-actualsrc=\"https://pic3.zhimg.com/25f61b546034ce43070da3a29da38d66_b.png\">",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么C++ 程序员看不起php？",
                "updated_time": 1457149072,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/41038998",
                "created": 1457148330,
                "id": 41038998
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/88728975",
            "thumbnail": "",
            "created_time": 1456803610,
            "updated_time": 1456804311,
            "id": 88728975,
            "excerpt": "本来还想复制粘贴解决问题的。结果找了半天没找到有人尝试过这个问题。只能自己去查资料了。我比较了一下几种方法。 origin.s指的是原始汇编文件。以这个长度为1.0。因为转换成c时要escape一些字符，所以不压缩，**.c的长度肯定大于1.0。naive用的是常见的LZ构造字典的方法，碰到重复次数少的超长字符串一点办法都没有。file 1就是这种类型的。file 2是某个g++编译出来的汇编文件。 file 1 file 2\norigin.s 1.000 1.000\nnaive.c …",
            "content": "本来还想复制粘贴解决问题的。结果找了半天没找到有人尝试过这个问题。只能自己去查资料了。我比较了一下几种方法。<br><br>origin.s指的是原始汇编文件。以这个长度为1.0。因为转换成c时要escape一些字符，所以不压缩，**.c的长度肯定大于1.0。naive用的是常见的LZ构造字典的方法，碰到重复次数少的超长字符串一点办法都没有。file 1就是这种类型的。file 2是某个g++编译出来的汇编文件。<br><br><div class=\"highlight\"><pre><code class=\"language-text\">           file 1   file 2\norigin.s   1.000    1.000\nnaive.c    1.029    0.953\nalgo1.c    1.023    0.674\nalgo2.c    0.600    0.508\n---------------------------\nlzo        0.329    0.263\ngz         0.212    0.150\nbz2        0.226    0.121\n</code></pre></div><br>algo1因为耗时太长，提前放弃了，所以碰到重复次数少的超长字符串效果同样不好，除非多耗很多时间等他找出来。algo2耗时少，不需要tweak参数，压缩率也相当不错，就选algo2了。<br><br>当然了，和常见压缩算法没法比。毕竟 #define X \"\" 导致少于四个字符的都不划算啊。<br><br>压缩结果长这样<br><br><div class=\"highlight\"><pre><code class=\"language-text\">bD Z\"8\"ag f al ag f\"%edi, 4\"ag f\"8\"R g p _ _M\"bx\"f R g aj h\n</code></pre></div><br>不难看出，确实大部分都被压缩了 ...",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何提高写在C语言里的汇编代码的压缩率？",
                "updated_time": 1456803856,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/39504416",
                "created": 1452828094,
                "id": 39504416
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/87887808",
            "thumbnail": "",
            "created_time": 1456304459,
            "updated_time": 1456311568,
            "id": 87887808,
            "excerpt": "我建议他先学习一个 http://www.infoq.com/cn/presentations/mobile-phone-taobao-hotpatch-technology-introduction https://github.com/alibaba/dexposed/issues/52 ------------------ Update: 评论里有人说hotpatch不能说明什么。我觉得也是。可是来自阿里的技术专家不是这么认为的 ... 这也就是为什么我贴了两个链接啊。 ",
            "content": "我建议他先学习一个<br><br><a href=\"https://link.zhihu.com/?target=http%3A//www.infoq.com/cn/presentations/mobile-phone-taobao-hotpatch-technology-introduction\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">infoq.com/cn/presentati</span><span class=\"invisible\">ons/mobile-phone-taobao-hotpatch-technology-introduction</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a><br><br><a href=\"https://link.zhihu.com/?target=https%3A//github.com/alibaba/dexposed/issues/52\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/alibaba/dexp</span><span class=\"invisible\">osed/issues/52</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a><br><br>------------------<br><br>Update: 评论里有人说hotpatch不能说明什么。我觉得也是。可是来自阿里的技术专家不是这么认为的 ... 这也就是为什么我贴了两个链接啊。<br><br><noscript><img data-rawheight=\"143\" data-rawwidth=\"779\" src=\"https://pic4.zhimg.com/d273fb08420256f276cf1669636a6423_b.png\" class=\"origin_image zh-lightbox-thumb\" width=\"779\" data-original=\"https://pic4.zhimg.com/d273fb08420256f276cf1669636a6423_r.png\"></noscript><img data-rawheight=\"143\" data-rawwidth=\"779\" src=\"//zhstatic.zhihu.com/assets/zhihu/ztext/whitedot.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"779\" data-original=\"https://pic4.zhimg.com/d273fb08420256f276cf1669636a6423_r.png\" data-actualsrc=\"https://pic4.zhimg.com/d273fb08420256f276cf1669636a6423_b.png\">",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何看待阿里巴巴安全专家云舒针对支付宝隐私门「赏金10万」？",
                "updated_time": 1456373511,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/40712137",
                "created": 1456302614,
                "id": 40712137
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/87436325",
            "thumbnail": "",
            "created_time": 1456067378,
            "updated_time": 1456068179,
            "id": 87436325,
            "excerpt": "这个不是明摆着，rev是边的序号，from和to是点的序号。无非就是加一条边时，顺便加一条反向的边。这种写法很不好啊，无脑套用会被坑的。 建议参考lemon库里edmonds-karp算法的实现。往图里加边时不要做特殊处理。out arc看有没有剩余capacity, in arc看flow是不是正的。这样不仅可以不建反向的边，也不用担心两点之间有多条边。",
            "content": "这个不是明摆着，rev是边的序号，from和to是点的序号。无非就是加一条边时，顺便加一条反向的边。这种写法很不好啊，无脑套用会被坑的。<br><br>建议参考lemon库里edmonds-karp算法的实现。往图里加边时不要做特殊处理。out arc看有没有剩余capacity, in arc看flow是不是正的。这样不仅可以不建反向的边，也不用担心两点之间有多条边。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "user_type": "people",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "《挑战程序设计竞赛》中的最大流问题？",
                "updated_time": 1456067180,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/40620424",
                "created": 1456067180,
                "id": 40620424
            }
        }
    ]
}