{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=360",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=400",
        "is_start": false,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/40861229",
            "thumbnail": "",
            "created_time": 1425205326,
            "updated_time": 1425205343,
            "id": 40861229,
            "excerpt": "题主别灰心，以前我也写不出来，可是后来我学了点ML语言的皮毛，瞬间就会了",
            "content": "题主别灰心，以前我也写不出来，可是后来我学了点ML语言的皮毛，瞬间就会了",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "写不出数据结构的人是不是不适合编程？",
                "updated_time": 1456416210,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/28446967",
                "created": 1425192360,
                "id": 28446967
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/40160129",
            "thumbnail": "",
            "created_time": 1424430232,
            "updated_time": 1424432248,
            "id": 40160129,
            "excerpt": "我听说有人工作一年后蛋疼去校园招聘玩，结果微软真的招他了，他就这样去了微软。",
            "content": "我听说有人工作一年后蛋疼去校园招聘玩，结果微软真的招他了，他就这样去了微软。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "工作一年的程序员又跑回学校和应届生一起应聘的话，会有什么优势和劣势？",
                "updated_time": 1424428694,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/28263648",
                "created": 1424353421,
                "id": 28263648
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/40031865",
            "thumbnail": "",
            "created_time": 1424240831,
            "updated_time": 1424780951,
            "id": 40031865,
            "excerpt": "要代码短，APL家族随便选一门就可以了。要知道在codegolf上，J语言可是经常毫无压力击败专门为codegolf开发的GolfScript的。 谁说APL难学的，看见APL IS EASY TO LEARN没？ 图摘自 APL In Exposition",
            "content": "要代码短，APL家族随便选一门就可以了。要知道在codegolf上，J语言可是经常毫无压力击败专门为codegolf开发的GolfScript的。<br><br>谁说APL难学的，看见APL IS EASY TO LEARN没？<br><br><noscript><img data-rawheight=\"209\" data-rawwidth=\"681\" src=\"https://pic4.zhimg.com/97f01baf2ec315227178af0c36b3eb7b_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"681\" data-original=\"https://pic4.zhimg.com/97f01baf2ec315227178af0c36b3eb7b_r.jpg\"></noscript><img data-rawheight=\"209\" data-rawwidth=\"681\" src=\"//zhstatic.zhihu.com/assets/zhihu/ztext/whitedot.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"681\" data-original=\"https://pic4.zhimg.com/97f01baf2ec315227178af0c36b3eb7b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/97f01baf2ec315227178af0c36b3eb7b_b.jpg\"><br>图摘自 APL In Exposition",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "普通人学习什么计算机语言比较好？有没有什么语言打的代码比较少的？",
                "updated_time": 1470398043,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/28248249",
                "created": 1424240738,
                "id": 28248249
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/39974054",
            "thumbnail": "",
            "created_time": 1424161588,
            "updated_time": 1424161588,
            "id": 39974054,
            "excerpt": "上面一个答案提到了Pysonar2。PySonar确实很好，但是Erlang里的Dialyzer/Typer在一开始就借鉴了王垠后来写的PySonar，完成度还比PySonar家族高多了，看Dialyzer/Typer的论文比对着王垠的slides和代码干瞪眼要好多了。论文链接可以在为了看懂王垠Pysonar，我应该掌握哪些知识？ - 知乎用户的回答 里找到。 比如王垠在slide里提到了PySonar的Limitations Doesn't process bytecode Dialyzer/Typer能 Does not track value/range of …",
            "content": "上面一个答案提到了Pysonar2。PySonar确实很好，但是Erlang里的Dialyzer/Typer在一开始就借鉴了王垠后来写的PySonar，完成度还比PySonar家族高多了，看Dialyzer/Typer的论文比对着王垠的slides和代码干瞪眼要好多了。论文链接可以在<a class=\"internal\" href=\"http://www.zhihu.com/question/27938655/answer/38715180\">为了看懂王垠Pysonar，我应该掌握哪些知识？ - 知乎用户的回答</a>里找到。<br><br>比如王垠在slide里提到了PySonar的Limitations<br><blockquote>Doesn't process bytecode<br></blockquote>Dialyzer/Typer能<br><blockquote>Does not track value/range of numbers<br></blockquote>Dialyzer/Typer能<br><blockquote>May produce false-negatives at recursions<br></blockquote>Dialyzer/Typer不会<br><blockquote>More approximations can be used to improve efficiency<br></blockquote>我感觉Dialyzer/Typer已经有过多approximations了，开了HiPE编译之后，速度比不开快了很多很多 ...，再说了，Dialyzer/Typer能用完所有分配给它的CPU，无论给几个核好像都能占完的样子，每次重建plt总是忘了这一点，接着桌面就卡死了<br><br>还有Possible Future Work<br><blockquote>Apply the technique to other (hopefully simpler) languages<br></blockquote>Erlang就是一门更简单的语言<br><blockquote>Publish a paper about the general method<br></blockquote>Dialyzer/Typer的作者在2004-2006年期间就已经发了好几篇论文了<br><br>王垠连related work都不敢列，一定是因为嫉妒 ...",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何学好程序的静态分析？",
                "updated_time": 1410147491,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/25254230",
                "created": 1410147379,
                "id": 25254230
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/39638553",
            "thumbnail": "",
            "created_time": 1423792265,
            "updated_time": 1423793403,
            "id": 39638553,
            "excerpt": "这是个box啊 > (define (f) (let ((a 0)) (lambda () (set! a (+ a 1)) a))\n> (let ((x (f))) (x))\n1\n> (let ((x (f))) (x) (x))\n2\n> (let ((x (f))) (x) (x) (x))\n3\n>\n",
            "content": "这是个box啊<br><br><div class=\"highlight\"><pre><code class=\"language-text\">&gt; (define (f) (let ((a 0)) (lambda () (set! a (+ a 1)) a))\n&gt; (let ((x (f))) (x))\n1\n&gt; (let ((x (f))) (x) (x))\n2\n&gt; (let ((x (f))) (x) (x) (x))\n3\n&gt;\n</code></pre></div>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Call/cc 如何这样模拟 Goto？",
                "updated_time": 1423791947,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/28158804",
                "created": 1423791947,
                "id": 28158804
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/39085882",
            "thumbnail": "",
            "created_time": 1423219827,
            "updated_time": 1423223086,
            "id": 39085882,
            "excerpt": "这个不就是unzip嘛，比如Erlang里 1> lists:unzip3([{3,17,32},{2,10,4},{7,5,9}]).\n{[3,2,7],[17,10,5],[32,4,9]}\n 元素是List zip([], []) -> [];\nzip([H1|T1], [H2|T2]) -> [[H1|H2]|zip(T1,T2)].\n\nunzip([]) -> [];\nunzip([L]) -> [[E] || E <- L];\nunzip([H|T]) -> zip(H, unzip(T)).\n\ntest() ->\n [[3,2,7],[17,10,5],[32,4,9]] = unzip([[3,17,32],[2,10,4],[7,5,9]]),\n ok.\n OCaml let rec zip a b =\n match a, b with\n |…",
            "content": "这个不就是unzip嘛，比如Erlang里<br><br><div class=\"highlight\"><pre><code class=\"language-erlang\"><span class=\"mi\">1</span><span class=\"o\">&gt;</span> <span class=\"nn\">lists</span><span class=\"p\">:</span><span class=\"nf\">unzip3</span><span class=\"p\">([{</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">},{</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">},{</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">}]).</span>\n<span class=\"p\">{[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],[</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],[</span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">]}</span>\n</code></pre></div><br>元素是List<br><br><div class=\"highlight\"><pre><code class=\"language-erlang\"><span class=\"nf\">zip</span><span class=\"p\">([],</span> <span class=\"p\">[])</span>           <span class=\"o\">-&gt;</span> <span class=\"p\">[];</span>\n<span class=\"nf\">zip</span><span class=\"p\">([</span><span class=\"nv\">H1</span><span class=\"p\">|</span><span class=\"nv\">T1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">H2</span><span class=\"p\">|</span><span class=\"nv\">T2</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"p\">[[</span><span class=\"nv\">H1</span><span class=\"p\">|</span><span class=\"nv\">H2</span><span class=\"p\">]|</span><span class=\"n\">zip</span><span class=\"p\">(</span><span class=\"nv\">T1</span><span class=\"p\">,</span><span class=\"nv\">T2</span><span class=\"p\">)].</span>\n\n<span class=\"nf\">unzip</span><span class=\"p\">([])</span>    <span class=\"o\">-&gt;</span> <span class=\"p\">[];</span>\n<span class=\"nf\">unzip</span><span class=\"p\">([</span><span class=\"nv\">L</span><span class=\"p\">])</span>   <span class=\"o\">-&gt;</span> <span class=\"p\">[[</span><span class=\"nv\">E</span><span class=\"p\">]</span> <span class=\"p\">||</span> <span class=\"nv\">E</span> <span class=\"o\">&lt;-</span> <span class=\"nv\">L</span><span class=\"p\">];</span>\n<span class=\"nf\">unzip</span><span class=\"p\">([</span><span class=\"nv\">H</span><span class=\"p\">|</span><span class=\"nv\">T</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">zip</span><span class=\"p\">(</span><span class=\"nv\">H</span><span class=\"p\">,</span> <span class=\"n\">unzip</span><span class=\"p\">(</span><span class=\"nv\">T</span><span class=\"p\">)).</span>\n\n<span class=\"nf\">test</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],[</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],[</span><span class=\"mi\">32</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">unzip</span><span class=\"p\">([[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"mi\">32</span><span class=\"p\">],[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],[</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">]]),</span>\n    <span class=\"n\">ok</span><span class=\"p\">.</span>\n</code></pre></div><br>OCaml<br><br><div class=\"highlight\"><pre><code class=\"language-ocaml\"><span class=\"k\">let</span> <span class=\"k\">rec</span> <span class=\"n\">zip</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">=</span>\n  <span class=\"k\">match</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"k\">with</span>\n    <span class=\"o\">|</span> <span class=\"bp\">[]</span><span class=\"o\">,</span> <span class=\"bp\">[]</span>             <span class=\"o\">-&gt;</span> <span class=\"bp\">[]</span>\n    <span class=\"o\">|</span> <span class=\"o\">(</span><span class=\"n\">h1</span><span class=\"o\">::</span><span class=\"n\">t1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">h2</span><span class=\"o\">::</span><span class=\"n\">t2</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">::</span> <span class=\"n\">h2</span><span class=\"o\">)</span> <span class=\"o\">::</span> <span class=\"n\">zip</span> <span class=\"n\">t1</span> <span class=\"n\">t2</span>\n    <span class=\"o\">|</span> <span class=\"o\">_,</span> <span class=\"o\">_</span>               <span class=\"o\">-&gt;</span> <span class=\"k\">assert</span> <span class=\"bp\">false</span>\n<span class=\"o\">;;</span>\n\n<span class=\"k\">let</span> <span class=\"k\">rec</span> <span class=\"n\">unzip</span> <span class=\"n\">l</span> <span class=\"o\">=</span>\n  <span class=\"k\">match</span> <span class=\"n\">l</span> <span class=\"k\">with</span>\n    <span class=\"o\">|</span> <span class=\"bp\">[]</span>         <span class=\"o\">-&gt;</span> <span class=\"bp\">[]</span><span class=\"o\">;</span>\n    <span class=\"o\">|</span> <span class=\"o\">[</span><span class=\"bp\">[]</span><span class=\"o\">]</span>       <span class=\"o\">-&gt;</span> <span class=\"bp\">[]</span><span class=\"o\">;</span>\n    <span class=\"o\">|</span> <span class=\"o\">[(</span><span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">t</span><span class=\"o\">)]</span> <span class=\"o\">-&gt;</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"o\">::</span> <span class=\"n\">unzip</span> <span class=\"o\">[</span><span class=\"n\">t</span><span class=\"o\">]</span>\n    <span class=\"o\">|</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">t</span>     <span class=\"o\">-&gt;</span> <span class=\"n\">zip</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">unzip</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"o\">;;</span>\n\n<span class=\"k\">let</span> <span class=\"bp\">()</span> <span class=\"o\">=</span>\n  <span class=\"k\">assert</span> <span class=\"o\">([[</span><span class=\"mi\">3</span><span class=\"o\">;</span><span class=\"mi\">2</span><span class=\"o\">;</span><span class=\"mi\">7</span><span class=\"o\">];[</span><span class=\"mi\">17</span><span class=\"o\">;</span><span class=\"mi\">10</span><span class=\"o\">;</span><span class=\"mi\">5</span><span class=\"o\">];[</span><span class=\"mi\">32</span><span class=\"o\">;</span><span class=\"mi\">4</span><span class=\"o\">;</span><span class=\"mi\">9</span><span class=\"o\">]]</span> <span class=\"o\">=</span> <span class=\"n\">unzip</span> <span class=\"o\">[[</span><span class=\"mi\">3</span><span class=\"o\">;</span><span class=\"mi\">17</span><span class=\"o\">;</span><span class=\"mi\">32</span><span class=\"o\">];[</span><span class=\"mi\">2</span><span class=\"o\">;</span><span class=\"mi\">10</span><span class=\"o\">;</span><span class=\"mi\">4</span><span class=\"o\">];[</span><span class=\"mi\">7</span><span class=\"o\">;</span><span class=\"mi\">5</span><span class=\"o\">;</span><span class=\"mi\">9</span><span class=\"o\">]]);</span>\n  <span class=\"bp\">()</span>\n<span class=\"o\">;;</span>\n</code></pre></div><br>...",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "怎样用ocaml语言将一个list里面的元素提取？",
                "updated_time": 1423528783,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/28023424",
                "created": 1423205062,
                "id": 28023424
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/38723858",
            "thumbnail": "",
            "created_time": 1422882086,
            "updated_time": 1422882086,
            "id": 38723858,
            "excerpt": "Yes. The Hitchhiker's Guide to the Galaxy has this to say on the subject of love: Avoid, if at all possible —— The Hitchhiker's Guide to the Galaxy (film) ",
            "content": "Yes.<br><br><blockquote><i>The Hitchhiker's Guide to the Galaxy</i> has this to say on the subject of love:<br><blockquote><b>Avoid, if at all possible<br></b></blockquote>—— <a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//en.wikiquote.org/wiki/The_Hitchhiker%2527s_Guide_to_the_Galaxy_%2528film%2529\" target=\"_blank\" rel=\"nofollow noreferrer\">The Hitchhiker's Guide to the Galaxy (film)<i class=\"icon-external\"></i></a></blockquote>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "谈恋爱是一件浪费时间的事情吗？",
                "updated_time": 1423405996,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27879227",
                "created": 1422605657,
                "id": 27879227
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/38715180",
            "thumbnail": "",
            "created_time": 1422875452,
            "updated_time": 1422876327,
            "id": 38715180,
            "excerpt": "Erlang里的Dialyzer/Typer在一开始就借鉴了王垠后来写的PySonar的，所以看Dialyzer/Typer的论文就好了。 DIALYZER: a DIscrepancy AnaLYZer for ERlang programs TYPER: A Type Annotator of Erlang Code Pratical type inference based on success typings Gradual Typing of Erlang programs: A Wrangler Experience ",
            "content": "Erlang里的Dialyzer/Typer在一开始就借鉴了王垠后来写的PySonar的，所以看Dialyzer/Typer的论文就好了。<br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/\" target=\"_blank\" rel=\"nofollow noreferrer\">DIALYZER: a DIscrepancy AnaLYZer for ERlang programs<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//user.it.uu.se/%7Etobiasl/publications/typer.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">TYPER: A Type Annotator of Erlang Code<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/publications/succ_types.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">Pratical type inference based on success typings<i class=\"icon-external\"></i></a><br><br><a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//www.it.uu.se/research/group/hipe/dialyzer/publications/wrangler.pdf\" target=\"_blank\" rel=\"nofollow noreferrer\">Gradual Typing of Erlang programs: A Wrangler Experience<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为了看懂王垠Pysonar，我应该掌握哪些知识？",
                "updated_time": 1422874698,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27938655",
                "created": 1422874698,
                "id": 27938655
            }
        },
        {
            "type": "answer",
            "is_collapsed": true,
            "url": "https://www.zhihu.com/api/v4/answers/38619559",
            "thumbnail": "",
            "created_time": 1422785458,
            "updated_time": 1470281433,
            "id": 38619559,
            "excerpt": "木鱼SQL ...",
            "content": "木鱼SQL ...",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "「MySQL」这个词怎么读？",
                "updated_time": 1466299189,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27916065",
                "created": 1422785089,
                "id": 27916065
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/38364781",
            "thumbnail": "",
            "created_time": 1422508586,
            "updated_time": 1422509625,
            "id": 38364781,
            "excerpt": "你需要的是一门APL家族的语言 比如你这个问题，在J语言里，可以这么表示Box - impress your cat - 知乎专栏 你的担心是多余的，完全可以只用一行，且不用任何变量来表示 (([:<\"1[:#:[:i.[:2&^#)#&.><) 1 2 3\n┌┬─┬─┬───┬─┬───┬───┬─────┐\n││3│2│2 3│1│1 3│1 2│1 2 3│\n└┴─┴─┴───┴─┴───┴───┴─────┘\n 组合子大法好",
            "content": "你需要的是一门APL家族的语言<br><br>比如你这个问题，在J语言里，可以这么表示<a href=\"http://zhuanlan.zhihu.com/impress-your-cat/19933594\" class=\"internal\">Box - impress your cat - 知乎专栏</a><br><br>你的担心是多余的，完全可以只用一行，且不用任何变量来表示<br><br><div class=\"highlight\"><pre><code class=\"language-text\">   (([:&lt;\"1[:#:[:i.[:2&amp;^#)#&amp;.&gt;&lt;) 1 2 3\n┌┬─┬─┬───┬─┬───┬───┬─────┐\n││3│2│2 3│1│1 3│1 2│1 2 3│\n└┴─┴─┴───┴─┴───┴───┴─────┘\n</code></pre></div><br>组合子大法好",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "以集合的方式理解代码,这样做还有哪些缺陷?",
                "updated_time": 1422547051,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27851780",
                "created": 1422497720,
                "id": 27851780
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/37732257",
            "thumbnail": "",
            "created_time": 1421831236,
            "updated_time": 1421842529,
            "id": 37732257,
            "excerpt": "yin yang puzzle不过是 yin = cc()\necho '@'\nyang = cc()\necho '*'\nyin(yang) 无非就是cc会产生平行宇宙。这个用 pi-calculus 来表示比较好 proc yin_cc(O,A,B) {\n new Yin in {\n yin(O,A,B,Yin) | send Yin to Yin\n }\n}\n\nproc yin(O,A,B,YinCC) {\n recv Yin from YinCC;\n send A to O;\n { yin(O,A,B,YinCC) | yang_cc(O,A,B,Yin) }\n}\n\nproc yang_cc(O,A,B,Yin) {\n new Yang in {\n yang(O,A,B,Yin,Yang) | send Yang to Yang\n }\n…",
            "content": "yin yang puzzle不过是<br><br><div class=\"highlight\"><pre><code class=\"language-text\">yin = cc()\necho '@'\nyang = cc()\necho '*'\nyin(yang)\n</code></pre></div><br>无非就是cc会产生平行宇宙。这个用 pi-calculus 来表示比较好<br><br><div class=\"highlight\"><pre><code class=\"language-text\">proc yin_cc(O,A,B) {\n    new Yin in {\n        yin(O,A,B,Yin) | send Yin to Yin\n    }\n}\n\nproc yin(O,A,B,YinCC) {\n    recv Yin from YinCC;\n    send A to O;\n    { yin(O,A,B,YinCC) | yang_cc(O,A,B,Yin) }\n}\n\nproc yang_cc(O,A,B,Yin) {\n    new Yang in {\n        yang(O,A,B,Yin,Yang) | send Yang to Yang\n    }\n}\n\nproc yang(O,A,B,Yin,YangCC) {\n    recv Yang from YangCC;\n    send B to O;\n    { yang(O,A,B,Yin,YangCC) | send Yang to Yin }\n}\n\nproc output(O) {\n    recv X from O;\n    output(O)\n}\n\nproc main() {\n    new O, A, B in {\n        output(O) | yin_cc(O,A,B)\n    }\n}\n</code></pre></div><br>这样就能直接看图了 <a href=\"https://link.zhihu.com/?target=http%3A//bhuztez.github.io/pi-diagram/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Diagram of π-Calculus<i class=\"icon-external\"></i></a><br><br>一看就会了，就是这么简单<br>----------------------------------------<br><br>我理解的执行过程是这样，不知道为啥这么理解和Ruby不一样<br><br><div class=\"highlight\"><pre><code class=\"language-text\">                  1     2\n- = cc() | -=1 | -=? | -=1 |\necho '@'    @\n+ = cc() | +=2 |     | +=? |\necho '*'    *                 3\n-(+)     |     | -=2 |     | -=2 |\n                  @\n               | +=3 |     | +=? |\n                  *\n                     | +=3 |\n                        *           4\n               | -=3 |           | -=3 |\n                  @\n               | +=4 |           | +=? |\n                  *\n                           | +=4 |\n                              *\n                     | +=4 |\n                        *\n</code></pre></div><br>评论不方便贴代码，直接贴这儿了<br><br><div class=\"highlight\"><pre><code class=\"language-text\">(let ((yin (call-with-current-continuation (lambda (c) c))))\n  (display #\\@)\n  (let ((yang (call-with-current-continuation (lambda (c) c))))\n    (display #\\*)\n    (yin yang)\n  )\n)\n</code></pre></div><br>Scheme明明没问题嘛",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何实现 Call / CC 或者阴阳谜题（Yin Yang Puzzle）？",
                "updated_time": 1421893401,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27683900",
                "created": 1421726256,
                "id": 27683900
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/37147300",
            "thumbnail": "",
            "created_time": 1421136342,
            "updated_time": 1421136535,
            "id": 37147300,
            "excerpt": "官方网站上的An Erlang Course就挺好的。废话也很少。一会儿就看完了嘛。虽然内容有点老了，但总的来说还是很好的嘛。 http://www.erlang.org/course/course.html ",
            "content": "官方网站上的An Erlang Course就挺好的。废话也很少。一会儿就看完了嘛。虽然内容有点老了，但总的来说还是很好的嘛。<br><br><a href=\"https://link.zhihu.com/?target=http%3A//www.erlang.org/course/course.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">erlang.org/course/cours</span><span class=\"invisible\">e.html</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "学习Erlang有什么好的资源？",
                "updated_time": 1381990367,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/21832057",
                "created": 1381990367,
                "id": 21832057
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/37088220",
            "thumbnail": "",
            "created_time": 1421068018,
            "updated_time": 1449032229,
            "id": 37088220,
            "excerpt": "https://news.ycombinator.com/item?id=8872400 ",
            "content": "<a href=\"https://link.zhihu.com/?target=https%3A//news.ycombinator.com/item%3Fid%3D8872400\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">news.ycombinator.com/it</span><span class=\"invisible\">em?id=8872400</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Go 这种逆天的语言，为什么 5 年了，还没有火起来呢？",
                "updated_time": 1452681475,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27172183",
                "created": 1419074065,
                "id": 27172183
            }
        },
        {
            "type": "answer",
            "is_collapsed": true,
            "url": "https://www.zhihu.com/api/v4/answers/36973566",
            "thumbnail": "",
            "created_time": 1420947331,
            "updated_time": 1420947401,
            "id": 36973566,
            "excerpt": "曾老师你连FP的基本概念都搞错了。FP是基于combinatory logic而不是lambda calculus，尽管两者之间有强烈的联系。没看过John Backus的Can Programming Be Liberated from the von Neumann Style? A Functional Style and Its Algebra of Programs，就别来嚷嚷FP，好不好？ We owe a great debt to Kenneth Iverson for showing us that there are programs that are neither word-at-a- time nor dependent on lambda expressions…",
            "content": "",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Functional Programming 说的就是 Lambda Calculus 吗？",
                "updated_time": 1423989858,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27521806",
                "created": 1420935187,
                "id": 27521806
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36948090",
            "thumbnail": "",
            "created_time": 1420902794,
            "updated_time": 1420902936,
            "id": 36948090,
            "excerpt": "山寨腾讯山寨版Robocode，以便山寨版Robocode的代码能在Robocode上运行。顺便爬了山寨Robocode上的所有Robot代码在Robocode里测试了一下是不是真的能运行。 我认为我这个行为属于高阶山寨，腾讯应该把山寨大王的名号让给我",
            "content": "山寨腾讯山寨版Robocode，以便山寨版Robocode的代码能在Robocode上运行。顺便爬了山寨Robocode上的所有Robot代码在Robocode里测试了一下是不是真的能运行。<br><br>我认为我这个行为属于高阶山寨，腾讯应该把山寨大王的名号让给我",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "你开发过什么不寻常的程序？",
                "updated_time": 1420892574,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27448909",
                "created": 1420608387,
                "id": 27448909
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36928858",
            "thumbnail": "",
            "created_time": 1420885742,
            "updated_time": 1420888351,
            "id": 36928858,
            "excerpt": "",
            "content": "<noscript><img data-rawheight=\"450\" data-rawwidth=\"800\" src=\"https://pic4.zhimg.com/56c5174f2376e87384a30359dba3d04b_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/56c5174f2376e87384a30359dba3d04b_r.jpg\"></noscript><img data-rawheight=\"450\" data-rawwidth=\"800\" src=\"//zhstatic.zhihu.com/assets/zhihu/ztext/whitedot.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"800\" data-original=\"https://pic4.zhimg.com/56c5174f2376e87384a30359dba3d04b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/56c5174f2376e87384a30359dba3d04b_b.jpg\">",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "有哪些长得很帅或呆萌的飞行器？",
                "updated_time": 1416672024,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26736052",
                "created": 1416666928,
                "id": 26736052
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36293746",
            "thumbnail": "",
            "created_time": 1420164026,
            "updated_time": 1420164129,
            "id": 36293746,
            "excerpt": "这个照搬Erlang the Movie的开头不就好了。代码来自这个玩意有什么大幅优化的余地吗？ - 算法 Functional programming languages have several advantages over\ntraditional languages For example, programs in such languages are\nconsiderably shorter than equivalent programs in imperative languages. Here for\nexample, is a program in C int classify(int m, int kmers[m], int n, float kprob[n][65536], int results…",
            "content": "这个照搬Erlang the Movie的开头不就好了。代码来自<a href=\"http://www.zhihu.com/question/27209781\" class=\"internal\">这个玩意有什么大幅优化的余地吗？ - 算法</a><br><br><blockquote>Functional programming languages have several advantages over\ntraditional languages<br><br>For example, programs in such languages are\nconsiderably shorter than equivalent programs in imperative languages.<br><br>Here for\nexample, is a program in C<br><br><div class=\"highlight\"><pre><code class=\"language-text\">int classify(int m, int kmers[m], int n, float kprob[n][65536], int results[n]) {\n  float sum[n];\n  memset(sum, 0, sizeof(sum));\n\n  for (int i=0; i&lt;m; i++) {\n    for (int j=0; j&lt;n; j++) {  \n      sum[j] += kprob[j][kmers[i]];\n    }\n  }\n\n  float min = sum[0];\n\n  for (int i=1; i&lt;n; i++) {\n    if (sum[i] &lt; min) {\n      min = sum[i];\n    }\n  }\n\n  int count = 0;\n  for (int i=0; i&lt;n; i++) {\n    if (sum[i] == min) {\n      results[count] = i;\n      count += 1;\n    }\n  }\n  return count;\n}\n</code></pre></div><br>and here is the equivalent program in J.<br><br><div class=\"highlight\"><pre><code class=\"language-text\">classify =: 4 : '(I.@:=&lt;./) +/ y {~~. x'\n</code></pre></div></blockquote><br>就是这样",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何向不懂编程的人解释函数式编程相对于命令式的优点？",
                "updated_time": 1420159371,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27354875",
                "created": 1420159371,
                "id": 27354875
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36243155",
            "thumbnail": "",
            "created_time": 1420083431,
            "updated_time": 1420083431,
            "id": 36243155,
            "excerpt": "Python is just as easy as ABC. Anyone who know ABC could master python in an hour.",
            "content": "Python is just as easy as ABC. Anyone who know ABC could master python in an hour.",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "精通 Python 是一种怎样的体验？",
                "updated_time": 1420129140,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27341859",
                "created": 1420058403,
                "id": 27341859
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36089576",
            "thumbnail": "",
            "created_time": 1419862616,
            "updated_time": 1419862661,
            "id": 36089576,
            "excerpt": "根据另外一个问题 求大神给我翻译男友写的东西？ - 无机化学 我想我能得出结论了，假如她喜欢你，哪怕你写的程序甚至都不能运行，也会很高兴的。 假如她不喜欢你，无论你程序写得多有意思，那都没用。 至于她是否喜欢你，这个问题可比写个程序难多了",
            "content": "根据另外一个问题<a class=\"internal\" href=\"http://www.zhihu.com/question/27219338\"> 求大神给我翻译男友写的东西？ - 无机化学</a><br><br>我想我能得出结论了，假如她喜欢你，哪怕你写的程序甚至都不能运行，也会很高兴的。<br>假如她不喜欢你，无论你程序写得多有意思，那都没用。<br><br>至于她是否喜欢你，这个问题可比写个程序难多了",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "想设计一个简单的程序向女生表白，有什么好的想法?",
                "updated_time": 1419842892,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27305357",
                "created": 1419842892,
                "id": 27305357
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/36016849",
            "thumbnail": "",
            "created_time": 1419767632,
            "updated_time": 1419767788,
            "id": 36016849,
            "excerpt": "这你就不懂了，既然你诚心诚意的问了，那我就大发慈悲的告诉你 smart is the new sexy math is the new porn 就是这样",
            "content": "这你就不懂了，既然你诚心诚意的问了，那我就大发慈悲的告诉你<br><br>smart is the new sexy<br>math is the new porn<br><br>就是这样",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "「我对女生的兴趣，还没有我对数学的兴趣高。」这样的男生是怎样的性格？",
                "updated_time": 1419852300,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27291231",
                "created": 1419762164,
                "id": 27291231
            }
        }
    ]
}