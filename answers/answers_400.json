{
    "paging": {
        "is_end": false,
        "previous": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=380",
        "next": "https://www.zhihu.com/api/v4/members/bhuztez/answers?include=data%5B%2A%5D.content&limit=20&offset=420",
        "is_start": false,
        "totals": 442
    },
    "data": [
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/35269353",
            "thumbnail": "",
            "created_time": 1418727032,
            "updated_time": 1467174673,
            "id": 35269353,
            "excerpt": "VHDL \nVerilog这种东西，只是做逻辑，可比单片机C语言/汇编语言容易多了。毕竟时代在飞速进步啊，现在这点破玩意儿随便找个9岁小朋友都能完成的。到了大一才只能\n做出这种烂玩意儿，也好意思出来炫耀。在很多年前，就算像我这种弱智，大一的时候该学的东西不好好学，不看书自己闭门造车，结果花了一星期才完成5级流水线(注意我也没想到国内的野鸡学校课也能那么多，弄这个东西把我空余时间全占了，因为是瞎搞的，一开始有一级流…",
            "content": "VHDL \nVerilog这种东西，只是做逻辑，可比单片机C语言/汇编语言容易多了。毕竟时代在飞速进步啊，现在这点破玩意儿<b>随便找个9岁小朋友都能完成的</b>。到了大一才只能\n做出这种烂玩意儿，也好意思出来炫耀。在很多年前，就算像我这种弱智，大一的时候该学的东西不好好学，不看书自己闭门造车，结果花了一星期才完成5级流水线(注意我也没想到国内的野鸡学校课也能那么多，弄这个东西把我空余时间全占了，因为是瞎搞的，一开始有一级流水线延时特别大，改了不少才让他们比较均匀，把频率提上去的，不过其实想想也没花多久啊)，不也一直当成笑话讲的。(<a class=\"internal\" href=\"http://www.zhihu.com/question/25113144/answer/30120375\"> 你们读大学时，第一门编程课是用什么编程语言？ - 知乎用户的回答</a>  不信，可以去问 <a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//book.douban.com/subject/23857924/\" target=\"_blank\" rel=\"nofollow noreferrer\">EDA技术与Verilog HDL<i class=\"icon-external\"></i></a> 这本烂书署名的作者，哪个都可以。)<br><br>我就是来反对很多其他答案的。这有什么厉害的。完全就是个水货。<br><br>就是这样",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何评价这个CPU设计？",
                "updated_time": 1418516254,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27048853",
                "created": 1418397782,
                "id": 27048853
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/34881876",
            "thumbnail": "",
            "created_time": 1418193524,
            "updated_time": 1418193524,
            "id": 34881876,
            "excerpt": "Easy Install 支持的。 require的时候指定一下版本号就好了。 “Multi-version” mode. Specifying this option prevents easy_install from adding an easy-install.pth entry for the package being installed, and if an entry for any version the package already exists, it will be removed upon successful installation. In multi-version mode, no specific version of the package is available for importing, unles…",
            "content": "<a href=\"https://link.zhihu.com/?target=https%3A//pythonhosted.org/setuptools/easy_install.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Easy Install<i class=\"icon-external\"></i></a> 支持的。 require的时候指定一下版本号就好了。<br><br><blockquote>    “Multi-version” mode. Specifying this option prevents easy_install from adding an easy-install.pth entry for the package being installed, and if an entry for any version the package already exists, it will be removed upon successful installation. In multi-version mode, no specific version of the package is available for importing, unless you use pkg_resources.require() to put it on sys.path. This can be as simple as:<br><br><div class=\"highlight\"><pre><code class=\"language-text\">    from pkg_resources import require\n    require(\"SomePackage\", \"OtherPackage\", \"MyPackage\")\n</code></pre></div><br>    which will put the latest installed version of the specified packages on sys.path for you. (For more advanced uses, like selecting specific versions and enabling optional dependencies, see the pkg_resources API doc.)<br><br>    Changed in 0.6a10: this option is no longer silently enabled when installing to a non-PYTHONPATH, non-“site” directory. You must always explicitly use this option if you want it to be active.</blockquote>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么 python 社区没有 Bundler 式的应用依赖管理？实现的主要困难在哪里？",
                "updated_time": 1419660986,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/27007086",
                "created": 1418183273,
                "id": 27007086
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/34814131",
            "thumbnail": "",
            "created_time": 1418102122,
            "updated_time": 1418102706,
            "id": 34814131,
            "excerpt": "我认为不可行。因为有环的话，DFS会陷入死循环，除非你有记录哪些节点已经访问过了。路由协议了这要这么做也可以，就是每通过一个节点，消息里就把节点编号加进去，消息会越来越长的。同时，肯定也要花更多时间啊，找到的还可能是一条延时无比长的路径。 有很多关于如何避免flooding的研究。比如Scalable Source Routing。主要思路借鉴自DHT。 现在考虑一种简化的DHT。DHT是为了在N个节点上存储好多Key -> Value的数据。假如你的…",
            "content": "我认为不可行。因为有环的话，DFS会陷入死循环，除非你有记录哪些节点已经访问过了。路由协议了这要这么做也可以，就是每通过一个节点，消息里就把节点编号加进去，消息会越来越长的。同时，肯定也要花更多时间啊，找到的还可能是一条延时无比长的路径。<br><br>有很多关于如何避免flooding的研究。比如Scalable Source Routing。主要思路借鉴自DHT。<br><br>现在考虑一种简化的DHT。DHT是为了在N个节点上存储好多Key -&gt; Value的数据。假如你的节点编号为 1 2 3 4 5 ，那么 hash(Key) 为 1 的那就存到节点1，依次类推。假如你其实只有2 4两个节点在工作。你要把1 2 3 4 5看成一个环，也就是5的下一个节点是1。此时，把hash(Key)为5 1 2的数据存在节点2，把hash(Key)为3 4的数据存在节点4。<br><br>不过怎么存数据和你没什么关系。把这种思路用于路由协议的时候，现在假设有7个节点1 2 3 4 5 6 7。比如节点3要记住一条到节点2的路径和一条到节点4的路径。这样，比如节点1要找到节点4的路径，因为节点1知道一条到节点2的路径，所以节点1可以问节点2，节点2可以问节点3，节点3知道一条到节点4的路径，把这几条路径串起来，就是一条从节点1到节点4的路径，当然了，你得去掉这中间出现的环，不然就是在兜圈子嘛。假如只剩下1 3 5 7，那么1要记住到3和7的路径，也就是要记住按逻辑编号排成一圈之后你的neighbour的编号。<br><br>一个个节点问过去是很慢的，所以你还需要从真正的DHT，比如Chord, Kademlia里借鉴点东西来加快找路径的速度。这样就能避免flooding了。当然了这样做经常不能返回当前的延时最短路径。<br><br>据说这里也有个三角关系，(图片来自 <a href=\"https://link.zhihu.com/?target=http%3A//www.net.t-labs.tu-berlin.de/talks/2010-01-13-fuhrmann.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">net.t-labs.tu-berlin.de</span><span class=\"invisible\">/talks/2010-01-13-fuhrmann.pdf</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>)<br><br><noscript><img data-rawheight=\"634\" data-rawwidth=\"933\" src=\"https://pic4.zhimg.com/2b477edc4e9a3c9aeec2aab1b2c0c83b_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"933\" data-original=\"https://pic4.zhimg.com/2b477edc4e9a3c9aeec2aab1b2c0c83b_r.jpg\"></noscript><img data-rawheight=\"634\" data-rawwidth=\"933\" src=\"//zhstatic.zhihu.com/assets/zhihu/ztext/whitedot.jpg\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"933\" data-original=\"https://pic4.zhimg.com/2b477edc4e9a3c9aeec2aab1b2c0c83b_r.jpg\" data-actualsrc=\"https://pic4.zhimg.com/2b477edc4e9a3c9aeec2aab1b2c0c83b_b.jpg\">",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "主动路由的寻路一开始发起的洪泛改成深度优先算法，是否可行？",
                "updated_time": 1415693518,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26570929",
                "created": 1415693518,
                "id": 26570929
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/34295000",
            "thumbnail": "",
            "created_time": 1417352418,
            "updated_time": 1417352418,
            "id": 34295000,
            "excerpt": "Because LISP is powerful. see Lisp语言真的像Paul Graham在《黑客与画家》里面说的一样强大吗？ ",
            "content": "Because LISP is powerful. see <a href=\"http://www.zhihu.com/question/26828946\" class=\"internal\">Lisp语言真的像Paul Graham在《黑客与画家》里面说的一样强大吗？</a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "为什么我的笔记本上跑lisp的程序风扇转的很厉害？",
                "updated_time": 1417323173,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26851384",
                "created": 1417323173,
                "id": 26851384
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/34294980",
            "thumbnail": "",
            "created_time": 1417352386,
            "updated_time": 1417352398,
            "id": 34294980,
            "excerpt": "Yes, LISP is very very powerful. see 为什么我的笔记本上跑lisp的程序风扇转的很厉害？ ",
            "content": "Yes, LISP is very very powerful. see <a href=\"http://www.zhihu.com/question/26851384\" class=\"internal\">为什么我的笔记本上跑lisp的程序风扇转的很厉害？</a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "Lisp 语言真的像保罗·葛兰姆（Paul Graham）在《黑客与画家》里面说的一样强大吗？",
                "updated_time": 1422434854,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26828946",
                "created": 1417175852,
                "id": 26828946
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/34120250",
            "thumbnail": "",
            "created_time": 1417089109,
            "updated_time": 1417089408,
            "id": 34120250,
            "excerpt": "不要小看Java啊。感觉好像Java自从诞生以来就没错过任何一个热点。",
            "content": "不要小看Java啊。感觉好像Java自从诞生以来就没错过任何一个热点。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "在未来，Go语言能否撼动Java在Android、Hadoop大数据、云计算领域的地位？",
                "updated_time": 1418778879,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26667707",
                "created": 1416287108,
                "id": 26667707
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33532110",
            "thumbnail": "",
            "created_time": 1416197263,
            "updated_time": 1416197367,
            "id": 33532110,
            "excerpt": "没有世界十大算法的说法，只能找到20世纪十大算法 http://www.computer.org/csdl/mags/cs/2000/01/c1022.pdf 真要有十大算法，那辗转相除法肯定排第一位了。",
            "content": "没有世界十大算法的说法，只能找到20世纪十大算法<br><br><a href=\"https://link.zhihu.com/?target=http%3A//www.computer.org/csdl/mags/cs/2000/01/c1022.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">computer.org/csdl/mags/</span><span class=\"invisible\">cs/2000/01/c1022.pdf</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a><br><br>真要有十大算法，那辗转相除法肯定排第一位了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "世界十大算法是哪些？内容分别是什么？",
                "updated_time": 1416018604,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26623860",
                "created": 1416018604,
                "id": 26623860
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33491679",
            "thumbnail": "",
            "created_time": 1416119993,
            "updated_time": 1446281868,
            "id": 33491679,
            "excerpt": "可以参考 ASN.1 不过这个问题太难了。举个例子，比如PDF，是要先读最后面的。 PDF文件结尾大概长这样 startxref\n12345\n%%EOF\nstartxref后面一行是xref table的offset。xref table里是object id到offset的对应关系。另外还有trailer。你从trailer信息里能拿到Root的object id。接着你就可以顺着Root一层层解析下去了。当然了，解析的过程中，要一会儿seek到这里，一会儿seek到那里。要写个parser generator来生成PDF parser，我觉…",
            "content": "可以参考<a class=\" wrap external\" href=\"https://link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Abstract_Syntax_Notation_One\" target=\"_blank\" rel=\"nofollow noreferrer\"> ASN.1<i class=\"icon-external\"></i></a><br><br>不过这个问题太难了。举个例子，比如PDF，是要先读最后面的。<br><br>PDF文件结尾大概长这样<br><div class=\"highlight\"><pre><code class=\"language-text\">startxref\n12345\n%%EOF\n</code></pre></div>startxref后面一行是xref table的offset。xref table里是object id到offset的对应关系。另外还有trailer。你从trailer信息里能拿到Root的object id。接着你就可以顺着Root一层层解析下去了。当然了，解析的过程中，要一会儿seek到这里，一会儿seek到那里。要写个parser generator来生成PDF parser，我觉得这挺难的。PDF还不算是什么二进制文件呢。<br><br>建议一开始可以从简单一点的轮子开始造起。比如IETF的RFC里定义了ABNF，很多网络协议都是用ABNF描述的。我觉得你写一个parser generator，来生成这些网络协议的parser就挺好的。接着再尝试二进制的网络协议。最后再去挑战二进制文件吧。<br><br>--------------------------------------------------------<br><br>Update:<br><br>我上面的说法有问题。不一定非要造个支持所有格式的才是有用的。哪怕能支持80%的格式，那也是不错的。比如某字体格式中有一个奇葩的定义方式，我们就不管他了<br><br><div class=\"highlight\"><pre><code class=\"language-text\">off_t offset[n];\n</code></pre></div><br>这个地方的offset并不是从header的第一个字节算起，也不是从body的第一字节算起，甚至还不是从offset这个数组的第一个字节算起，而是从每一个offset自己的第一个字节算起 ...<br><br>正如我一直强调的，parser是一种特殊的interpreter。而对理解parser来说，最重要的notation就是Prolog了。<br><br>假如我们能机智的使用Prolog，那么我们只要一份代码，不仅能从二进制格式解析出数据，也能把数据转换成二进制格式。<br><br>比如题主的第一个问题，简化一下，用Prolog可以这么写<br><br><div class=\"highlight\"><pre><code class=\"language-text\">n_int(0, [], []).\n\nn_int(N, List, Out) :-\n  List = [H|Rest],\n  n_int(N1, Rest, Out1),\n  N is N1 + 1,\n  Out = [H|Out1].\n\nsize_and_n_int(In, Out) :-\n  In = [Size|Rest],\n  n_int(Size, Rest, Out).\n</code></pre></div><br>来看一下运行结果<br><br><div class=\"highlight\"><pre><code class=\"language-text\">?- size_and_n_int(X, [1,2,3,4]).\nX = [4, 1, 2, 3, 4] .\n\n?- size_and_n_int([5,1,2,3,4,5], X).\nX = [1, 2, 3, 4, 5] ;\nfalse.\n\n?- \n% halt\n</code></pre></div><br>太棒了<br><br>所以，果断轮子造起来。目前的想法大致如下<br><br><div class=\"highlight\"><pre><code class=\"language-text\">struct frame {\n  version : uint(8) = 1,\n  switch(version) {\n  case 0:\n      length : uint(16),\n  case 1:\n      length : uint(32),\n  },\n  size(length) {\n      text : char[_]\n  },\n}\n</code></pre></div><br>stay tuned",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "怎样设计一个binary file的parser generator？",
                "updated_time": 1416111126,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26637938",
                "created": 1416111126,
                "id": 26637938
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33459110",
            "thumbnail": "",
            "created_time": 1416050559,
            "updated_time": 1416050559,
            "id": 33459110,
            "excerpt": "首先，Python 2里map和filter得到的是list。Python 3改成iterator是主要是为了省内存吧。 第二，只有一部分generator是iterator。以Python 3为例，generator的接口是send, throw这两个函数。iterator的接口是 __next__。generator里的__next__相当于是 send(None) >>> def a():\n... x = yield 1\n... print(x)\n... \n>>> g = a()\n>>> g.send(None)\n1\n>>> g.send(2)\n2\nTraceback (most recent call last):\n File \"<stdin>\", line 1,…",
            "content": "首先，Python 2里map和filter得到的是list。Python 3改成iterator是主要是为了省内存吧。<br><br>第二，只有一部分generator是iterator。以Python 3为例，generator的接口是send, throw这两个函数。iterator的接口是 __next__。generator里的__next__相当于是 send(None)<br><br><div class=\"highlight\"><pre><code class=\"language-text\">&gt;&gt;&gt; def a():\n...     x = yield 1\n...     print(x)\n... \n&gt;&gt;&gt; g = a()\n&gt;&gt;&gt; g.send(None)\n1\n&gt;&gt;&gt; g.send(2)\n2\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt; g = a()\n&gt;&gt;&gt; g.__next__()\n1\n&gt;&gt;&gt; g.__next__()\nNone\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nStopIteration\n&gt;&gt;&gt; \n</code></pre></div><br>list compresion会被编译成一个generator，是因为generator已经能表示iterator了，没必要在bytecode里特别为iterator定义一个magic number。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "你是如何深入理解 Python 的 list comprehension 就是 generator 这一点的？",
                "updated_time": 1416217997,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26627609",
                "created": 1416038906,
                "id": 26627609
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33309196",
            "thumbnail": "",
            "created_time": 1415787577,
            "updated_time": 1415787985,
            "id": 33309196,
            "excerpt": "考虑到p, q都是素数，这个也可以看成是费马小定理 找到了，看 Fermat's Little Theorem ",
            "content": "考虑到p, q都是素数，这个也可以看成是费马小定理<br><br>找到了，看<a href=\"https://link.zhihu.com/?target=http%3A//www.artofproblemsolving.com/Wiki/index.php/Fermat%2527s_Little_Theorem%23Proof_4_.28Geometry.29\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> Fermat's Little Theorem<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如何脱离辗转相除法证明对于素数p,q，mp+nq=1整数解（m,n）的存在性和唯一性？",
                "updated_time": 1415788798,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26586592",
                "created": 1415784484,
                "id": 26586592
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33188067",
            "thumbnail": "",
            "created_time": 1415591035,
            "updated_time": 1415596098,
            "id": 33188067,
            "excerpt": "别再打开知乎了。专心准备高考吧。假如到时候连个985都考不上，在知乎上会被一大帮人认为是弱智的。反正你已经比很多人起步晚了，再晚个两三年也没什么。只要学得快，一样赶得上。",
            "content": "别再打开知乎了。专心准备高考吧。假如到时候连个985都考不上，在知乎上会被一大帮人认为是弱智的。反正你已经比很多人起步晚了，再晚个两三年也没什么。只要学得快，一样赶得上。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "只是为了建立一点编程的思想思维，学哪个语言最好？",
                "updated_time": 1415548001,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26549593",
                "created": 1415548001,
                "id": 26549593
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/33076352",
            "thumbnail": "",
            "created_time": 1415358709,
            "updated_time": 1415358709,
            "id": 33076352,
            "excerpt": "简单的说就是数三角形。我记得有一篇中文的写得还可以的。我找找。 使用原生WebGL实现的一个太阳系模型 ",
            "content": "简单的说就是数三角形。我记得有一篇中文的写得还可以的。我找找。<br><br><a href=\"https://link.zhihu.com/?target=http%3A//iriska.diandian.com/post/2013-07-04/solarSystem\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">使用原生WebGL实现的一个太阳系模型<i class=\"icon-external\"></i></a>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "各位前辈，有没有学习WebGL方面的经验愿意分享？",
                "updated_time": 1415358363,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26521256",
                "created": 1415358297,
                "id": 26521256
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32916112",
            "thumbnail": "",
            "created_time": 1415091981,
            "updated_time": 1415100010,
            "id": 32916112,
            "excerpt": "感觉套一下公式就可以吧，毕竟数据量小。 -module(game24).\n-compile(export_all).\n\npermutation(0,_) ->[[]];\npermutation(_,[])->[];\npermutation(N,L) ->[[E|T]||E<-L,T<-permutation(N-1,L--[E])].\n\ngcd(A,0)-> A;\ngcd(A,B)-> gcd(B, A rem B).\n\nfrac(X) when is_integer(X) -> {frac, X, 1};\nfrac({frac, X, Y}) -> G = gcd(X,Y), {frac, X div G, Y div G}.\n\ncalc('+',{frac,A1,A2},{frac,B1,B2}) -> {frac, A1*B2+B1*A2, …",
            "content": "感觉套一下公式就可以吧，毕竟数据量小。<br><br><div class=\"highlight\"><pre><code class=\"language-erlang\"><span class=\"p\">-</span><span class=\"ni\">module</span><span class=\"p\">(</span><span class=\"n\">game24</span><span class=\"p\">).</span>\n<span class=\"p\">-</span><span class=\"ni\">compile</span><span class=\"p\">(</span><span class=\"n\">export_all</span><span class=\"p\">).</span>\n\n<span class=\"nf\">permutation</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,_)</span> <span class=\"o\">-&gt;</span><span class=\"p\">[[]];</span>\n<span class=\"nf\">permutation</span><span class=\"p\">(_,[])</span><span class=\"o\">-&gt;</span><span class=\"p\">[];</span>\n<span class=\"nf\">permutation</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">,</span><span class=\"nv\">L</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span><span class=\"p\">[[</span><span class=\"nv\">E</span><span class=\"p\">|</span><span class=\"nv\">T</span><span class=\"p\">]||</span><span class=\"nv\">E</span><span class=\"o\">&lt;-</span><span class=\"nv\">L</span><span class=\"p\">,</span><span class=\"nv\">T</span><span class=\"o\">&lt;-</span><span class=\"n\">permutation</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"nv\">L</span><span class=\"o\">--</span><span class=\"p\">[</span><span class=\"nv\">E</span><span class=\"p\">])].</span>\n\n<span class=\"nf\">gcd</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span> <span class=\"nv\">A</span><span class=\"p\">;</span>\n<span class=\"nf\">gcd</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">)</span><span class=\"o\">-&gt;</span> <span class=\"n\">gcd</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">A</span> <span class=\"ow\">rem</span> <span class=\"nv\">B</span><span class=\"p\">).</span>\n\n<span class=\"nf\">frac</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span> <span class=\"k\">when</span> <span class=\"nb\">is_integer</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">};</span>\n<span class=\"nf\">frac</span><span class=\"p\">({</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">Y</span><span class=\"p\">})</span>         <span class=\"o\">-&gt;</span> <span class=\"nv\">G</span> <span class=\"o\">=</span> <span class=\"n\">gcd</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span><span class=\"nv\">Y</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">X</span> <span class=\"ow\">div</span> <span class=\"nv\">G</span><span class=\"p\">,</span> <span class=\"nv\">Y</span> <span class=\"ow\">div</span> <span class=\"nv\">G</span><span class=\"p\">}.</span>\n\n<span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">A1</span><span class=\"p\">,</span><span class=\"nv\">A2</span><span class=\"p\">},{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">B1</span><span class=\"p\">,</span><span class=\"nv\">B2</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">A1</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"o\">+</span><span class=\"nv\">B1</span><span class=\"o\">*</span><span class=\"nv\">A2</span><span class=\"p\">,</span> <span class=\"nv\">A2</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"p\">};</span>\n<span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">A1</span><span class=\"p\">,</span><span class=\"nv\">A2</span><span class=\"p\">},{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">B1</span><span class=\"p\">,</span><span class=\"nv\">B2</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">A1</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"o\">-</span><span class=\"nv\">B1</span><span class=\"o\">*</span><span class=\"nv\">A2</span><span class=\"p\">,</span> <span class=\"nv\">A2</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"p\">};</span>\n<span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">A1</span><span class=\"p\">,</span><span class=\"nv\">A2</span><span class=\"p\">},{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">B1</span><span class=\"p\">,</span><span class=\"nv\">B2</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">A1</span><span class=\"o\">*</span><span class=\"nv\">B1</span><span class=\"p\">,</span>       <span class=\"nv\">A2</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"p\">};</span>\n<span class=\"nf\">calc</span><span class=\"p\">(</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">A1</span><span class=\"p\">,</span><span class=\"nv\">A2</span><span class=\"p\">},{</span><span class=\"n\">frac</span><span class=\"p\">,</span><span class=\"nv\">B1</span><span class=\"p\">,</span><span class=\"nv\">B2</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"nv\">A1</span><span class=\"o\">*</span><span class=\"nv\">B2</span><span class=\"p\">,</span>       <span class=\"nv\">A2</span><span class=\"o\">*</span><span class=\"nv\">B1</span><span class=\"p\">}.</span>\n\n<span class=\"nf\">rpn</span><span class=\"p\">([],</span> <span class=\"p\">[],</span> <span class=\"p\">[],</span> <span class=\"p\">[</span><span class=\"nv\">N</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span>\n    <span class=\"n\">frac</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">);</span>\n<span class=\"nf\">rpn</span><span class=\"p\">([</span><span class=\"n\">push</span><span class=\"p\">|</span><span class=\"nv\">AT</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">NH</span><span class=\"p\">|</span><span class=\"nv\">NT</span><span class=\"p\">],</span> <span class=\"nv\">Ops</span><span class=\"p\">,</span> <span class=\"nv\">Stack</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"n\">rpn</span><span class=\"p\">(</span><span class=\"nv\">AT</span><span class=\"p\">,</span> <span class=\"nv\">NT</span><span class=\"p\">,</span> <span class=\"nv\">Ops</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">NH</span><span class=\"p\">|</span><span class=\"nv\">Stack</span><span class=\"p\">]);</span>\n<span class=\"nf\">rpn</span><span class=\"p\">([</span><span class=\"n\">calc</span><span class=\"p\">|</span><span class=\"nv\">AT</span><span class=\"p\">],</span> <span class=\"nv\">Nums</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">OH</span><span class=\"p\">|</span><span class=\"nv\">OT</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">A</span><span class=\"p\">|</span><span class=\"nv\">Stack</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span>\n    <span class=\"n\">rpn</span><span class=\"p\">(</span><span class=\"nv\">AT</span><span class=\"p\">,</span> <span class=\"nv\">Nums</span><span class=\"p\">,</span> <span class=\"nv\">OT</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">calc</span><span class=\"p\">(</span><span class=\"nv\">OH</span><span class=\"p\">,</span><span class=\"n\">frac</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">),</span><span class=\"n\">frac</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">))|</span><span class=\"nv\">Stack</span><span class=\"p\">]).</span>\n\n<span class=\"nf\">rpn2tree</span><span class=\"p\">([],</span> <span class=\"p\">[],</span> <span class=\"p\">[],</span> <span class=\"p\">[</span><span class=\"nv\">N</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span>\n    <span class=\"nv\">N</span><span class=\"p\">;</span>\n<span class=\"nf\">rpn2tree</span><span class=\"p\">([</span><span class=\"n\">push</span><span class=\"p\">|</span><span class=\"nv\">AT</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">NH</span><span class=\"p\">|</span><span class=\"nv\">NT</span><span class=\"p\">],</span> <span class=\"nv\">Ops</span><span class=\"p\">,</span> <span class=\"nv\">Stack</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"n\">rpn2tree</span><span class=\"p\">(</span><span class=\"nv\">AT</span><span class=\"p\">,</span> <span class=\"nv\">NT</span><span class=\"p\">,</span> <span class=\"nv\">Ops</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">NH</span><span class=\"p\">|</span><span class=\"nv\">Stack</span><span class=\"p\">]);</span>\n<span class=\"nf\">rpn2tree</span><span class=\"p\">([</span><span class=\"n\">calc</span><span class=\"p\">|</span><span class=\"nv\">AT</span><span class=\"p\">],</span> <span class=\"nv\">Nums</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">OH</span><span class=\"p\">|</span><span class=\"nv\">OT</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">A</span><span class=\"p\">|</span><span class=\"nv\">Stack</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span>\n    <span class=\"n\">rpn2tree</span><span class=\"p\">(</span><span class=\"nv\">AT</span><span class=\"p\">,</span> <span class=\"nv\">Nums</span><span class=\"p\">,</span> <span class=\"nv\">OT</span><span class=\"p\">,</span> <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">OH</span><span class=\"p\">,</span> <span class=\"nv\">B</span><span class=\"p\">}|</span><span class=\"nv\">Stack</span><span class=\"p\">]).</span>\n\n<span class=\"nf\">n1</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">O</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">N</span><span class=\"p\">,</span><span class=\"nv\">O</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}||</span><span class=\"nv\">N</span><span class=\"o\">&lt;-</span><span class=\"n\">neighbours</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">)]</span> <span class=\"o\">++</span> <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">O</span><span class=\"p\">,</span><span class=\"nv\">N</span><span class=\"p\">}||</span><span class=\"nv\">N</span><span class=\"o\">&lt;-</span><span class=\"n\">neighbours</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">)];</span>\n<span class=\"nf\">n1</span><span class=\"p\">(_)</span>      <span class=\"o\">-&gt;</span><span class=\"p\">[].</span>\n\n<span class=\"c\">%% A+B = B+A</span>\n<span class=\"c\">%% A*B = B*A</span>\n\n<span class=\"nf\">n2</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">A</span><span class=\"p\">}];</span>\n<span class=\"nf\">n2</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">A</span><span class=\"p\">}];</span>\n<span class=\"nf\">n2</span><span class=\"p\">(_)</span>        <span class=\"o\">-&gt;</span><span class=\"p\">[].</span>\n\n<span class=\"c\">%% (A+B)+C = A+(B+C)</span>\n<span class=\"c\">%% (A*B)*C = A*(B*C)</span>\n\n<span class=\"nf\">n3</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n3</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}];</span>\n<span class=\"nf\">n3</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n3</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}];</span>\n<span class=\"nf\">n3</span><span class=\"p\">(_)</span>                <span class=\"o\">-&gt;</span><span class=\"p\">[].</span>\n\n<span class=\"c\">%% (A-B)+C = A+(C-B) = (A+C)-B = A-(B-C)</span>\n<span class=\"c\">%% (A/B)*C = A*(C/B) = (A*C)/B = A/(B/C)</span>\n\n<span class=\"nf\">n4</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,{</span><span class=\"nv\">C</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n4</span><span class=\"p\">(_)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"p\">[].</span>\n\n<span class=\"c\">%% (A-B)-C = A-(B+C) = (A-C)-B</span>\n<span class=\"c\">%% (A/B)/C = A/(B*C) = (A/C)/B</span>\n\n<span class=\"nf\">n5</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'-'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'-'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'+'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">({{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">})</span><span class=\"o\">-&gt;</span><span class=\"p\">[{{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"n\">'/'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"n\">'/'</span><span class=\"p\">,{</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"n\">'*'</span><span class=\"p\">,</span><span class=\"nv\">C</span><span class=\"p\">}}];</span>\n<span class=\"nf\">n5</span><span class=\"p\">(_)</span>                <span class=\"o\">-&gt;</span><span class=\"p\">[].</span>\n\n<span class=\"nf\">neighbours</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">n1</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span><span class=\"o\">++</span><span class=\"n\">n2</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span><span class=\"o\">++</span><span class=\"n\">n3</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span><span class=\"o\">++</span><span class=\"n\">n4</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">)</span><span class=\"o\">++</span><span class=\"n\">n5</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">).</span>\n\n<span class=\"nf\">indexof</span><span class=\"p\">(</span><span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">indexof</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">).</span>\n\n<span class=\"nf\">indexof</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">,</span> <span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">E</span><span class=\"p\">|_])</span> <span class=\"o\">-&gt;</span> <span class=\"nv\">N</span><span class=\"p\">;</span>\n<span class=\"nf\">indexof</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">,</span> <span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"p\">[_|</span><span class=\"nv\">T</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">indexof</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"nv\">T</span><span class=\"p\">).</span>\n\n<span class=\"nf\">nth</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">H</span><span class=\"p\">|_])</span> <span class=\"o\">-&gt;</span> <span class=\"nv\">H</span><span class=\"p\">;</span>\n<span class=\"nf\">nth</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">,</span> <span class=\"p\">[_|</span><span class=\"nv\">T</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">nth</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nv\">T</span><span class=\"p\">).</span>\n\n\n<span class=\"nf\">unify</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"k\">case</span> <span class=\"nn\">dict</span><span class=\"p\">:</span><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">)</span> <span class=\"k\">of</span>\n        <span class=\"nv\">A</span> <span class=\"o\">-&gt;</span>\n            <span class=\"k\">case</span> <span class=\"nn\">dict</span><span class=\"p\">:</span><span class=\"nf\">fetch</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">)</span> <span class=\"k\">of</span>\n                <span class=\"nv\">B</span> <span class=\"o\">-&gt;</span>\n                    <span class=\"k\">case</span> <span class=\"nv\">B</span> <span class=\"k\">of</span>\n                        <span class=\"nv\">A</span> <span class=\"o\">-&gt;</span>\n                            <span class=\"nv\">D</span><span class=\"p\">;</span>\n                        <span class=\"p\">_</span> <span class=\"o\">-&gt;</span>\n                            <span class=\"nn\">dict</span><span class=\"p\">:</span><span class=\"nf\">store</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">D</span><span class=\"p\">)</span>\n                    <span class=\"k\">end</span><span class=\"p\">;</span>\n                <span class=\"nv\">M</span> <span class=\"o\">-&gt;</span>\n                    <span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">M</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">)</span>\n            <span class=\"k\">end</span><span class=\"p\">;</span>\n        <span class=\"nv\">N</span> <span class=\"o\">-&gt;</span>\n            <span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"nv\">N</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">)</span>\n    <span class=\"k\">end</span><span class=\"p\">.</span>\n\n\n<span class=\"nf\">unify</span><span class=\"p\">({</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">},</span><span class=\"nv\">D</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">B</span><span class=\"p\">,</span><span class=\"nv\">D</span><span class=\"p\">).</span>\n\n\n<span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"nv\">Nums</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span>\n    <span class=\"nv\">Actions</span> <span class=\"o\">=</span>\n        <span class=\"p\">[</span>\n         <span class=\"p\">[</span><span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">],</span>\n         <span class=\"p\">[</span><span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">,</span> <span class=\"n\">push</span><span class=\"p\">,</span> <span class=\"n\">calc</span><span class=\"p\">]</span>\n        <span class=\"p\">],</span>\n\n    <span class=\"nv\">Results</span> <span class=\"o\">=</span>\n        <span class=\"p\">[</span><span class=\"n\">rpn2tree</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">N</span><span class=\"p\">,[</span><span class=\"nv\">O1</span><span class=\"p\">,</span><span class=\"nv\">O2</span><span class=\"p\">,</span><span class=\"nv\">O3</span><span class=\"p\">],[])</span>\n         <span class=\"p\">||</span> <span class=\"nv\">A</span> <span class=\"o\">&lt;-</span> <span class=\"nv\">Actions</span><span class=\"p\">,</span> <span class=\"nv\">N</span> <span class=\"o\">&lt;-</span> <span class=\"n\">permutation</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"nv\">Nums</span><span class=\"p\">),</span>\n            <span class=\"nv\">O1</span> <span class=\"o\">&lt;-</span><span class=\"p\">[</span><span class=\"n\">'+'</span><span class=\"p\">,</span> <span class=\"n\">'-'</span><span class=\"p\">,</span> <span class=\"n\">'*'</span><span class=\"p\">,</span> <span class=\"n\">'/'</span><span class=\"p\">],</span>\n            <span class=\"nv\">O2</span> <span class=\"o\">&lt;-</span><span class=\"p\">[</span><span class=\"n\">'+'</span><span class=\"p\">,</span> <span class=\"n\">'-'</span><span class=\"p\">,</span> <span class=\"n\">'*'</span><span class=\"p\">,</span> <span class=\"n\">'/'</span><span class=\"p\">],</span>\n            <span class=\"nv\">O3</span> <span class=\"o\">&lt;-</span><span class=\"p\">[</span><span class=\"n\">'+'</span><span class=\"p\">,</span> <span class=\"n\">'-'</span><span class=\"p\">,</span> <span class=\"n\">'*'</span><span class=\"p\">,</span> <span class=\"n\">'/'</span><span class=\"p\">],</span>\n            <span class=\"n\">rpn</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span><span class=\"nv\">N</span><span class=\"p\">,[</span><span class=\"nv\">O1</span><span class=\"p\">,</span><span class=\"nv\">O2</span><span class=\"p\">,</span><span class=\"nv\">O3</span><span class=\"p\">],[])</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"n\">frac</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">}],</span>\n\n    <span class=\"nv\">Neighbours</span> <span class=\"o\">=</span>\n        <span class=\"p\">[{</span><span class=\"n\">indexof</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">,</span> <span class=\"nv\">Results</span><span class=\"p\">),</span> <span class=\"n\">indexof</span><span class=\"p\">(</span><span class=\"nv\">B</span><span class=\"p\">,</span> <span class=\"nv\">Results</span><span class=\"p\">)}</span> <span class=\"p\">||</span> <span class=\"nv\">A</span> <span class=\"o\">&lt;-</span> <span class=\"nv\">Results</span><span class=\"p\">,</span> <span class=\"nv\">B</span> <span class=\"o\">&lt;-</span> <span class=\"n\">neighbours</span><span class=\"p\">(</span><span class=\"nv\">A</span><span class=\"p\">)],</span>\n\n    <span class=\"nv\">I</span> <span class=\"o\">=</span> <span class=\"nn\">lists</span><span class=\"p\">:</span><span class=\"nf\">seq</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">length</span><span class=\"p\">(</span><span class=\"nv\">Results</span><span class=\"p\">)),</span>\n    <span class=\"nv\">Map</span> <span class=\"o\">=</span> <span class=\"nn\">dict</span><span class=\"p\">:</span><span class=\"nf\">to_list</span><span class=\"p\">(</span><span class=\"nn\">lists</span><span class=\"p\">:</span><span class=\"nf\">foldl</span><span class=\"p\">(</span><span class=\"k\">fun</span> <span class=\"n\">unify</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"nn\">dict</span><span class=\"p\">:</span><span class=\"nf\">from_list</span><span class=\"p\">(</span><span class=\"nn\">lists</span><span class=\"p\">:</span><span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"nv\">I</span><span class=\"p\">,</span> <span class=\"nv\">I</span><span class=\"p\">)),</span> <span class=\"nv\">Neighbours</span><span class=\"p\">)),</span>\n    <span class=\"p\">[</span><span class=\"n\">nth</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span><span class=\"nv\">Results</span><span class=\"p\">)</span> <span class=\"p\">||</span> <span class=\"p\">{</span><span class=\"nv\">X</span><span class=\"p\">,</span><span class=\"nv\">X</span><span class=\"p\">}</span> <span class=\"o\">&lt;-</span> <span class=\"nv\">Map</span><span class=\"p\">].</span>\n</code></pre></div><br>运行结果<br><br><div class=\"highlight\"><pre><code class=\"language-text\">1&gt; game24:solve([1,3,8,12]).\n[{1,'+',{12,'+',{3,'+',8}}},\n {8,'*',{{12,'/',3},'-',1}},\n {12,'*',{8,'/',{1,'+',3}}}]\n</code></pre></div><br>没检查过，我怀疑代码是有问题的",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "关于24点去重的算法?",
                "updated_time": 1415080526,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26474181",
                "created": 1415080526,
                "id": 26474181
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32680996",
            "thumbnail": "",
            "created_time": 1414663159,
            "updated_time": 1414723193,
            "id": 32680996,
            "excerpt": "代码渣。C语言不会。用J语言写还是挺简单的。 regular =: 4 : 0\na =. 1\nb =. 0 #~ # x\nfor. i. >./ y do.\n c =. x * b { a\n m =. <./ c\n b =. b + m = c\n a =. a , m\nend.\ny { a\n)\n 10 10 $ 2 3 5 regular i.100\n 1 2 3 4 5 6 8 9 10 12\n 15 16 18 20 24 25 27 30 32 36\n 40 45 48 50 54 60 64 72 75 80\n 81 90 96 100 108 120 125 128 135 144\n 150 160 162 180 192 200 216 225 240 243\n 250 256 270 288 300 320 324 360 375 …",
            "content": "代码渣。C语言不会。用J语言写还是挺简单的。<br><br><div class=\"highlight\"><pre><code class=\"language-text\">   regular =: 4 : 0\na =. 1\nb =. 0 #~ # x\nfor. i. &gt;./ y do.\n  c =. x * b { a\n  m =. &lt;./ c\n  b =. b + m = c\n  a =. a , m\nend.\ny { a\n)\n   10 10 $ 2 3 5 regular i.100\n   1    2    3    4    5    6    8    9   10   12\n  15   16   18   20   24   25   27   30   32   36\n  40   45   48   50   54   60   64   72   75   80\n  81   90   96  100  108  120  125  128  135  144\n 150  160  162  180  192  200  216  225  240  243\n 250  256  270  288  300  320  324  360  375  384\n 400  405  432  450  480  486  500  512  540  576\n 600  625  640  648  675  720  729  750  768  800\n 810  864  900  960  972 1000 1024 1080 1125 1152\n1200 1215 1250 1280 1296 1350 1440 1458 1500 1536\n   10 10 $ 2 3 5 7 regular i.100\n  1   2   3   4   5   6   7   8   9  10\n 12  14  15  16  18  20  21  24  25  27\n 28  30  32  35  36  40  42  45  48  49\n 50  54  56  60  63  64  70  72  75  80\n 81  84  90  96  98 100 105 108 112 120\n125 126 128 135 140 144 147 150 160 162\n168 175 180 189 192 196 200 210 216 224\n225 240 243 245 250 252 256 270 280 288\n294 300 315 320 324 336 343 350 360 375\n378 384 392 400 405 420 432 441 448 450\n</code></pre></div><br>J语言大法就是好",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "计算第K个能表示(2^i * 3^j * 5^k)的正整数（i,j,k为整数）？其前7个满足此条件的数分别是1,2,3,4,5,6,8",
                "updated_time": 1413650859,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26078610",
                "created": 1413558704,
                "id": 26078610
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32314348",
            "thumbnail": "",
            "created_time": 1414032622,
            "updated_time": 1414032622,
            "id": 32314348,
            "excerpt": "先列出公式 a(1, 1) = 1\na(N, 1) = m * (a(N-1, 3) + a(N-1, 4))\na(N, 2) = a(N-1, 1)\na(N, 3) = a(N-1, 2)\na(N, 4) = a(N-1, 3)\na(N) = a(N,1) + a(N,2) + a(N,3) + a(N,4)\n 用矩阵表示 \\begin{bmatrix}\n0 & m & m & 0 \\\\\n1 & 0 & 0 & 0 \\\\\n0 & 1 & 0 & 0 \\\\\n0 & 0 & 1 & 0 \\\\\n\\end{bmatrix}^n \\cdot \\begin{bmatrix}\n1 \\\\ \n0 \\\\ \n0 \\\\ \n0 \\\\\n\\end{bmatrix} 计算出结果后把四个数相加就可以了。",
            "content": "先列出公式<br><br><div class=\"highlight\"><pre><code class=\"language-text\">a(1, 1) = 1\na(N, 1) = m * (a(N-1, 3) + a(N-1, 4))\na(N, 2) = a(N-1, 1)\na(N, 3) = a(N-1, 2)\na(N, 4) = a(N-1, 3)\na(N) = a(N,1) + a(N,2) + a(N,3) + a(N,4)\n</code></pre></div><br>用矩阵表示<br><br><img src=\"https://www.zhihu.com/equation?tex=%5Cbegin%7Bbmatrix%7D%0A0+%26+m+%26+m+%26+0+%5C%5C%0A1+%26+0+%26+0+%26+0+%5C%5C%0A0+%26+1+%26+0+%26+0+%5C%5C%0A0+%26+0+%26+1+%26+0+%5C%5C%0A%5Cend%7Bbmatrix%7D%5En+%5Ccdot+%5Cbegin%7Bbmatrix%7D%0A1+%5C%5C+%0A0+%5C%5C+%0A0+%5C%5C+%0A0+%5C%5C%0A%5Cend%7Bbmatrix%7D\" alt=\"\\begin{bmatrix}\n0 &amp; m &amp; m &amp; 0 \\\\\n1 &amp; 0 &amp; 0 &amp; 0 \\\\\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n0 &amp; 0 &amp; 1 &amp; 0 \\\\\n\\end{bmatrix}^n \\cdot \\begin{bmatrix}\n1 \\\\ \n0 \\\\ \n0 \\\\ \n0 \\\\\n\\end{bmatrix}\" eeimg=\"1\"><br><br>计算出结果后把四个数相加就可以了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "一怪物从出生起第3个月就能繁衍一批后代m个，生存第5个月后毙命。目前只有一个，计算第n个月后怪物的总数？",
                "updated_time": 1414136566,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26165632",
                "created": 1413990306,
                "id": 26165632
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32237243",
            "thumbnail": "",
            "created_time": 1413900625,
            "updated_time": 1413956908,
            "id": 32237243,
            "excerpt": "直接的解法是，写成矩阵形式，接着利用矩阵乘法符合结合律，二分查找就可以了 \\begin{bmatrix}\n0.99 & 0 & 0 & \\cdots & 0 \\\\\n0.01 & 0.98 & 0 & \\cdots & 0 \\\\\n0 & 0.02 & 0.97 & \\cdots & 0 \\\\\n\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\\n0 & 0 & 0 & \\vdots & 1 \\\\\n\\end{bmatrix}^n \\cdot \\begin{bmatrix}\n1 \\\\\n0 \\\\\n0 \\\\\n\\vdots \\\\\n0\n\\end{bmatrix} #!/usr/bin/env python2\n\n\nfrom numpy import matrix, identity\n\nA = …",
            "content": "直接的解法是，写成矩阵形式，接着利用矩阵乘法符合结合律，二分查找就可以了<br><br><img src=\"https://www.zhihu.com/equation?tex=%5Cbegin%7Bbmatrix%7D%0A0.99+%26+0++++++%26++0+++%26+%5Ccdots+%26+0+%5C%5C%0A0.01+%26+0.98+%26+++0+++%26+%5Ccdots+%26+0+%5C%5C%0A0++++++%26+0.02+%26++0.97+%26+%5Ccdots+%26+0+%5C%5C%0A%5Cvdots+%26+%5Cvdots+%26+%5Cvdots+%26+%5Cddots+%26+%5Cvdots+%5C%5C%0A0+++++++%26+0+%26+0+%26+%5Cvdots+%26+1+%5C%5C%0A%5Cend%7Bbmatrix%7D%5En+%5Ccdot+%5Cbegin%7Bbmatrix%7D%0A1+%5C%5C%0A0+%5C%5C%0A0+%5C%5C%0A%5Cvdots+%5C%5C%0A0%0A%5Cend%7Bbmatrix%7D\" alt=\"\\begin{bmatrix}\n0.99 &amp; 0      &amp;  0   &amp; \\cdots &amp; 0 \\\\\n0.01 &amp; 0.98 &amp;   0   &amp; \\cdots &amp; 0 \\\\\n0      &amp; 0.02 &amp;  0.97 &amp; \\cdots &amp; 0 \\\\\n\\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\\n0       &amp; 0 &amp; 0 &amp; \\vdots &amp; 1 \\\\\n\\end{bmatrix}^n \\cdot \\begin{bmatrix}\n1 \\\\\n0 \\\\\n0 \\\\\n\\vdots \\\\\n0\n\\end{bmatrix}\" eeimg=\"1\"><br><br><div class=\"highlight\"><pre><code class=\"language-python\"><span class=\"c\">#!/usr/bin/env python2</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">numpy</span> <span class=\"kn\">import</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"n\">identity</span>\n\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">matrix</span><span class=\"p\">([[</span><span class=\"mf\">0.0</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)]</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)])</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">99</span><span class=\"p\">):</span>\n    <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">99</span><span class=\"o\">-</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">100.0</span>\n    <span class=\"n\">A</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">100.0</span>\n\n<span class=\"n\">A</span><span class=\"p\">[</span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"mi\">99</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n<span class=\"n\">NUMS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">A</span><span class=\"p\">]</span>\n\n<span class=\"k\">while</span> <span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.9</span><span class=\"p\">:</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"n\">NUMS</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">LM</span> <span class=\"o\">=</span> <span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">LN</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">NUMS</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">CM</span> <span class=\"o\">=</span> <span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"n\">CN</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">NUMS</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">I</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">NUMS</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">3</span>\n\n<span class=\"k\">while</span> <span class=\"n\">I</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">PM</span> <span class=\"o\">=</span> <span class=\"n\">CM</span>\n    <span class=\"n\">PN</span> <span class=\"o\">=</span> <span class=\"n\">CN</span>\n\n    <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">NUMS</span><span class=\"p\">[</span><span class=\"n\">I</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">PM</span><span class=\"p\">)</span>\n        <span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"n\">PN</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"n\">I</span><span class=\"p\">)</span>\n        <span class=\"n\">I</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">I</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">M</span><span class=\"p\">[</span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.9</span><span class=\"p\">:</span>\n            <span class=\"n\">LM</span> <span class=\"o\">=</span> <span class=\"n\">M</span>\n            <span class=\"n\">LN</span> <span class=\"o\">=</span> <span class=\"n\">N</span>\n            <span class=\"n\">CM</span> <span class=\"o\">=</span> <span class=\"n\">PM</span>\n            <span class=\"n\">CN</span> <span class=\"o\">=</span> <span class=\"n\">PN</span>\n            <span class=\"k\">break</span>\n\n        <span class=\"n\">PM</span> <span class=\"o\">=</span> <span class=\"n\">M</span>\n        <span class=\"n\">PN</span> <span class=\"o\">=</span> <span class=\"n\">N</span>\n\n<span class=\"k\">print</span> <span class=\"n\">LN</span>\n</code></pre></div><br>二分法得到 N = 682",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "数学概率问题，概率叠加，感觉本科学的就没有用了，得以上学历，求指点？",
                "updated_time": 1413886864,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26132001",
                "created": 1413886864,
                "id": 26132001
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32199124",
            "thumbnail": "",
            "created_time": 1413858848,
            "updated_time": 1413859722,
            "id": 32199124,
            "excerpt": "因为 10 X \\equiv 9X + X \\equiv X \\pmod 9 所以 1234...1024 \\equiv \\sum_{i=1}^{1024}i \\pmod 9 因为 连续9个整数和必然被9整除 又 1024 \\equiv 1+0+2+4 \\equiv 7 \\pmod 9 所以 \\sum_{i=1}^{1024} i \\equiv \\sum_{i=1}^{7} i \\pmod 9 1+2+3+4+5+6+7 \\equiv 1 + (2+7) + (3+6) + (4+5) \\equiv 1 \\pmod 9 证明 连续9个整数和必然被9整除 因为 -4 + -3 + -2 + -1 + 0 + 1 + 2 + 3 + 4 \\equiv 0 \\pmod 9 任意连续9个整数的和，必然…",
            "content": "因为 <img src=\"https://www.zhihu.com/equation?tex=10+X+%5Cequiv+9X+%2B+X+%5Cequiv+X+%5Cpmod+9\" alt=\"10 X \\equiv 9X + X \\equiv X \\pmod 9\" eeimg=\"1\"><br>所以 <img src=\"https://www.zhihu.com/equation?tex=1234...1024+%5Cequiv+%5Csum_%7Bi%3D1%7D%5E%7B1024%7Di+%5Cpmod+9\" alt=\"1234...1024 \\equiv \\sum_{i=1}^{1024}i \\pmod 9\" eeimg=\"1\"><br>因为 连续9个整数和必然被9整除<br>又 <img src=\"https://www.zhihu.com/equation?tex=1024+%5Cequiv+1%2B0%2B2%2B4+%5Cequiv+7+%5Cpmod+9\" alt=\"1024 \\equiv 1+0+2+4 \\equiv 7 \\pmod 9\" eeimg=\"1\"><br>所以 <img src=\"https://www.zhihu.com/equation?tex=%5Csum_%7Bi%3D1%7D%5E%7B1024%7D+i+%5Cequiv+%5Csum_%7Bi%3D1%7D%5E%7B7%7D+i+%5Cpmod+9\" alt=\"\\sum_{i=1}^{1024} i \\equiv \\sum_{i=1}^{7} i \\pmod 9\" eeimg=\"1\"><br><img src=\"https://www.zhihu.com/equation?tex=1%2B2%2B3%2B4%2B5%2B6%2B7+%5Cequiv+1+%2B+%282%2B7%29+%2B+%283%2B6%29+%2B+%284%2B5%29+%5Cequiv+1+%5Cpmod+9\" alt=\"1+2+3+4+5+6+7 \\equiv 1 + (2+7) + (3+6) + (4+5) \\equiv 1 \\pmod 9\" eeimg=\"1\"><br><br>证明 连续9个整数和必然被9整除<br>因为 <img src=\"https://www.zhihu.com/equation?tex=-4+%2B+-3+%2B+-2+%2B+-1+%2B+0+%2B+1+%2B+2+%2B+3+%2B+4+%5Cequiv+0+%5Cpmod+9\" alt=\"-4 + -3 + -2 + -1 + 0 + 1 + 2 + 3 + 4 \\equiv 0 \\pmod 9\" eeimg=\"1\"><br>任意连续9个整数的和，必然和这列数差9的倍数",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "从 1 到 1024 排成一个数除以 9，余数是多少？",
                "updated_time": 1421126945,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26033918",
                "created": 1413300574,
                "id": 26033918
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/32092354",
            "thumbnail": "",
            "created_time": 1413685923,
            "updated_time": 1413685923,
            "id": 32092354,
            "excerpt": "在Fedora里把grub2那个包erase掉。装grub，注意，最近几个版本得装generic-logos，fedora-logos都不带grub的背景图了。这样就不需要grub2了。",
            "content": "在Fedora里把grub2那个包erase掉。装grub，注意，最近几个版本得装generic-logos，fedora-logos都不带grub的背景图了。这样就不需要grub2了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "grub和grub2冲突怎么办？",
                "updated_time": 1413616722,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/26084550",
                "created": 1413611472,
                "id": 26084550
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/31667327",
            "thumbnail": "",
            "created_time": 1412953507,
            "updated_time": 1412953507,
            "id": 31667327,
            "excerpt": "Alice在海滩上捡到了一个瓶子，想看看里面有啥，但是怎么也打不开瓶盖。Alice找到Bob，他们两个合力把瓶盖大开。结果里面出来了个魔鬼。魔鬼很感动，决定分别满足他们一个愿望。Alice很机智，她的愿望是要魔鬼满足她以后提的所有愿望。魔鬼是很讲信用的，毫不犹豫地答应了。Bob也很机智，他也要求魔鬼满足他以后提的所有愿望。魔鬼也爽快地答应了。这个时候，Alice又提了个愿望，Bob无论提什么愿望，魔鬼都不可以满足他。只见魔…",
            "content": "Alice在海滩上捡到了一个瓶子，想看看里面有啥，但是怎么也打不开瓶盖。Alice找到Bob，他们两个合力把瓶盖大开。结果里面出来了个魔鬼。魔鬼很感动，决定分别满足他们一个愿望。Alice很机智，她的愿望是要魔鬼满足她以后提的所有愿望。魔鬼是很讲信用的，毫不犹豫地答应了。Bob也很机智，他也要求魔鬼满足他以后提的所有愿望。魔鬼也爽快地答应了。这个时候，Alice又提了个愿望，Bob无论提什么愿望，魔鬼都不可以满足他。只见魔鬼迅速地溜进瓶子里，还顺便把盖子盖上。无论Alice和Bob怎么用力，都再也打不开瓶子了。",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "如果拥有梦想成真的超能力，世界会不会变得索然无味毫无意义？",
                "updated_time": 1412830164,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/25868840",
                "created": 1412830164,
                "id": 25868840
            }
        },
        {
            "type": "answer",
            "is_collapsed": false,
            "url": "https://www.zhihu.com/api/v4/answers/31665193",
            "thumbnail": "",
            "created_time": 1412950491,
            "updated_time": 1412950491,
            "id": 31665193,
            "excerpt": "用repoquery就可以了吧 repoquery -a --tree-requires PACKAGE\n\nrepoquery -a --tree-requires PACKAGE | sed 's/^[ |]*\\\\_\\s*\\(\\S\\+\\)/\\1/' | grep -Eo '^\\S+' | sort | uniq\n",
            "content": "用repoquery就可以了吧<br><br><div class=\"highlight\"><pre><code class=\"language-text\">repoquery -a --tree-requires PACKAGE\n\nrepoquery -a --tree-requires PACKAGE | sed 's/^[ |]*\\\\_\\s*\\(\\S\\+\\)/\\1/' | grep -Eo '^\\S+' | sort | uniq\n</code></pre></div>",
            "is_copyable": true,
            "author": {
                "is_org": false,
                "avatar_url_template": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_{size}.jpg",
                "gender": 1,
                "type": "people",
                "url": "https://www.zhihu.com/api/v4/people/dcddea61834f6b2dcb515f393fe29575",
                "url_token": "bhuztez",
                "user_type": "people",
                "headline": "正在找工作 ...",
                "badge": [],
                "is_advertiser": false,
                "name": "bhuztez",
                "avatar_url": "https://pic3.zhimg.com/e59aeb8898c50a830976297787cdce86_is.jpg",
                "id": "dcddea61834f6b2dcb515f393fe29575"
            },
            "extras": "",
            "question": {
                "title": "yum和rpm递归依赖解析?",
                "updated_time": 1333008773,
                "type": "question",
                "question_type": "normal",
                "url": "https://www.zhihu.com/api/v4/questions/20148443",
                "created": 1333008773,
                "id": 20148443
            }
        }
    ]
}